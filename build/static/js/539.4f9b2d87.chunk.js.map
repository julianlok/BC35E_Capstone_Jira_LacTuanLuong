{"version":3,"file":"static/js/539.4f9b2d87.chunk.js","mappings":"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","sources":["components/Button/Button.tsx","components/Dropdown/Dropdow.tsx","components/Dropdown/List.tsx","components/Dropdown/Option.tsx","components/Dropdown/Select.tsx","components/Input/Input.tsx","components/Input/TextTiny.tsx","components/Label/Label.tsx","components/common/ErrorComponent/ErrorComponent.tsx","components/common/FormGroup/FormGroup.tsx","components/common/FormRow/FormRow.tsx","hooks/useClickOutside.tsx","pages/Project/AddProject.tsx"],"sourcesContent":["import { type } from \"os\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype Props = {\r\n  children: JSX.Element | React.ReactNode;\r\n  type: string | any;\r\n  className?: string;\r\n  isLoading?: boolean;\r\n  href?: string;\r\n  kind?: string;\r\n  onClick?: any;\r\n};\r\n\r\nconst Button = ({\r\n  children,\r\n  onClick,\r\n  className = \"\",\r\n  isLoading = false,\r\n  ...rest\r\n}: Props) => {\r\n  const child = !!isLoading ? (\r\n    <div className=\"w-8 h-8 rounded-full border-4 border-white border-t-transparent border-b-transparent animate-spin\"></div>\r\n  ) : (\r\n    children\r\n  );\r\n\r\n  let defaultClassName =\r\n    \"text-base font-semibold rounded-xl flex items-center justify-center\";\r\n\r\n  switch (rest.kind) {\r\n    case \"primary\":\r\n      defaultClassName =\r\n        defaultClassName +\r\n        \" bg-gradient-to-r from-[#00a7b4] to-[#a4d96c] text-white p-4 min-h-[56px]\";\r\n      break;\r\n\r\n    case \"secondary\":\r\n      defaultClassName =\r\n        defaultClassName +\r\n        \" bg-secondary bg-opacity-20 text-secondary p-4 min-h-[56px]\";\r\n      break;\r\n\r\n    case \"cancel\":\r\n      defaultClassName =\r\n        defaultClassName +\r\n        \" bg-stock hover:bg-gray-100 transition-all text-text3 text-base font-medium font-mono px-4 py-2 rounded-lg\";\r\n      break;\r\n\r\n    case \"success\":\r\n      defaultClassName =\r\n        defaultClassName +\r\n        \" bg-blue-500 hover:bg-opacity-80  text-white px-4 py-2 font-mono\";\r\n      break;\r\n\r\n    case \"delete\":\r\n      defaultClassName =\r\n        defaultClassName +\r\n        \" bg-red-500 hover:bg-opacity-80 text-white px-4 py-2 font-mono\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  if (rest.href)\r\n    return (\r\n      <Link to={rest.href} className={defaultClassName + \" \" + className}>\r\n        {children}\r\n      </Link>\r\n    );\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={`cursor-pointer ${\r\n        defaultClassName +\r\n        \" \" +\r\n        (!!isLoading ? \"opacity-50 pointer-events-none\" : \"\")\r\n      } ${className}`}\r\n      {...rest}\r\n    >\r\n      {child}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { AddUserType } from \"../../types/global\";\r\nexport type Props = {\r\n  children?: JSX.Element | React.ReactNode;\r\n  placeholder?: string;\r\n  className?: string;\r\n  show?: boolean;\r\n  onClick?: () => void;\r\n  dataDel?: () => void;\r\n  removeUser?: any;\r\n  clearListUser?: any;\r\n  nodeRef?: any;\r\n  data?: AddUserType[];\r\n\r\n  searchFilter?: (e: React.FormEvent<HTMLInputElement>) => void;\r\n};\r\nconst Dropdown = ({ children }: Props) => {\r\n  return <div className=\"relative \">{children}</div>;\r\n};\r\n\r\nexport default Dropdown;\r\n","import React from \"react\";\r\nimport { Props } from \"./Dropdow\";\r\n\r\nconst List = ({ children, show, className }: Props) => {\r\n  return (\r\n    <>\r\n      {show && (\r\n        <div\r\n          className={`absolute top-full left-0 w-full bg-white shadow-lg rounded-lg overflow-hidden z-10 ${className}`}\r\n        >\r\n          {children}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport { Props } from \"./Dropdow\";\r\n\r\nconst Option = ({ children, onClick, className = \" \" }: Props) => {\r\n  return (\r\n    <div\r\n      className={`py-4 px-5 cursor-pointer flex items-center justify-between transition-all ease-linear text-sm hover:text-[#42526e]  hover:bg-[rgba(9,30,66,0.04)] hover:border-l-4 hover:border-l-primary hover:bg-opacity-20 ${className}`}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Option;\r\n","import React from \"react\";\r\nimport { Props } from \"./Dropdow\";\r\n\r\nconst Select = ({\r\n  show,\r\n  onClick,\r\n  placeholder = \"\",\r\n  className = \" text-text2 bg-bgInput\",\r\n  nodeRef,\r\n}: Props) => {\r\n  return (\r\n    <div\r\n      ref={nodeRef}\r\n      className={`flex items-center justify-between px-6 py-4  border border-strock rounded-xl text-sm font-semibold cursor-pointer select-none ${className}`}\r\n      onClick={onClick}\r\n    >\r\n      <span>{placeholder}</span>\r\n      <span>\r\n        {show ? (\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"h-4 w-4\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M5 15l7-7 7 7\"\r\n            />\r\n          </svg>\r\n        ) : (\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"h-4 w-4\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M19 9l-7 7-7-7\"\r\n            />\r\n          </svg>\r\n        )}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport { useField } from \"formik\";\r\nimport { withErrorBoundary } from \"react-error-boundary\";\r\nimport ErrorComponent from \"../common/ErrorComponent/ErrorComponent\";\r\nimport { propsInput } from \"../../types/global\";\r\n\r\nconst Input = ({\r\n  children,\r\n  className = \"bg-bgInput\",\r\n  ...props\r\n}: propsInput) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div className=\"relative \">\r\n      <input\r\n        className={`w-full px-6 py-4 border  rounded-xl text-sm font-medium placeholder:text-text4 dark:placeholder:text-text-2 ${className} ${\r\n          meta.touched && meta.error\r\n            ? \"border-error text-error\"\r\n            : \"border-strock text-text1 dark:border-darkStoke\"\r\n        } ${children ? \"pr-14\" : \"\"}`}\r\n        {...props}\r\n        {...field}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <span className=\"absolute bottom-0 left-1 translate-y-6 text-sm text-error font-medium pointer-events-none error-input\">\r\n          {meta.error}\r\n        </span>\r\n      ) : null}\r\n      {children && (\r\n        <span className=\" absolute right-6 top-2/4 -translate-y-2/4 cursor-pointer select-none\">\r\n          {children}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withErrorBoundary(Input, {\r\n  FallbackComponent: ErrorComponent,\r\n});\r\n","import React from \"react\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport { Field } from \"formik\";\r\n\r\ntype Props = {\r\n  control: string;\r\n  name: string;\r\n  value?: string;\r\n};\r\n\r\nconst TextTiny = ({ control, name, value, ...props }: Props) => {\r\n  switch (control) {\r\n    case \"tiny-mce\":\r\n      return (\r\n        <>\r\n          <Field id={name} name={name} {...props}>\r\n            {({ form, field }: any) => {\r\n              const { setFieldValue } = form;\r\n\r\n              return (\r\n                <>\r\n                  <Editor\r\n                    value={field.value}\r\n                    initialValue={value}\r\n                    init={{\r\n                      height: 500,\r\n                      menubar: true,\r\n                      toolbar:\r\n                        \"undo redo | formatselect | \" +\r\n                        \"bold italic backcolor | alignleft aligncenter \" +\r\n                        \"alignright alignjustify | bullist numlist outdent indent | \" +\r\n                        \"removeformat | help\",\r\n                      content_style:\r\n                        \"body { font-family:Helvetica,Arial,sans-serif; font-size:14px }\",\r\n                    }}\r\n                    onEditorChange={(content, editor) => {\r\n                      setFieldValue(name, content);\r\n                    }}\r\n                  />\r\n                </>\r\n              );\r\n            }}\r\n          </Field>\r\n        </>\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default TextTiny;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  children: JSX.Element | React.ReactNode;\r\n  htmlFor?: string;\r\n  onClick?: any;\r\n};\r\n\r\nconst Label = (props: Props) => {\r\n  const { children, htmlFor = \"\", onClick } = props;\r\n  return (\r\n    <label\r\n      onClick={onClick}\r\n      htmlFor={htmlFor}\r\n      className=\"text-sm text-left font-medium  text-text2 dark:text-text3 cursor-pointer inline-block mt-5\"\r\n    >\r\n      {children}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\n\r\ntype Props = {};\r\n\r\nconst ErrorComponent = (props: Props) => {\r\n  return (\r\n    <div className=\"text-red-500 bg-red-100 p-5 rounded-lg\">\r\n      Look like component is error\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorComponent;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  children: JSX.Element | React.ReactNode;\r\n};\r\n\r\nconst FormGroup = ({ children }: Props) => {\r\n  return (\r\n    <div className=\"flex flex-col gap-y-2 lg:gap-y-3 mb-4 lg:mb-5\">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormGroup;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  children: JSX.Element | React.ReactNode;\r\n  className?: string;\r\n};\r\n\r\nconst FormRow = ({ children, className = \"grid-cols-2\" }: Props) => {\r\n  return (\r\n    <div className={`grid gap-x-[45px] mb-1 ${className}`}>{children}</div>\r\n  );\r\n};\r\n\r\nexport default FormRow;\r\n","import { useState, useRef, useEffect } from \"react\";\r\nexport default function useClickOutside() {\r\n  const [show, setShow] = useState<boolean>(false);\r\n  const nodeRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    function handleOutside(this: Document, ev: MouseEvent) {\r\n      if (nodeRef.current && !nodeRef.current.contains(ev.target as Node)) {\r\n        setShow(false);\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"click\", handleOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleOutside);\r\n    };\r\n  }, []);\r\n\r\n  return { show, setShow, nodeRef };\r\n}\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport Label from \"../../components/Label/Label\";\r\nimport Dropdown from \"../../components/Dropdown/Dropdow\";\r\nimport Select from \"../../components/Dropdown/Select\";\r\nimport List from \"../../components/Dropdown/List\";\r\nimport useClickOutside from \"../../hooks/useClickOutside\";\r\nimport Option from \"../../components/Dropdown/Option\";\r\nimport FormRow from \"../../components/common/FormRow/FormRow\";\r\nimport FormGroup from \"../../components/common/FormGroup/FormGroup\";\r\nimport TextTiny from \"../../components/Input/TextTiny\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { DispathType, RootState } from \"../../redux/config\";\r\nimport {\r\n  createProject,\r\n  getProjectCategoryApi,\r\n} from \"../../redux/projectReducer/projectReducer\";\r\nimport { useToast } from \"../../components/Toast\";\r\n\r\ntype Props = {};\r\ninterface Values {\r\n  projectName: string;\r\n  description: string;\r\n  categoryId: number;\r\n}\r\nconst AddProject = (props: Props) => {\r\n  const dispatch: DispathType = useDispatch();\r\n  const initialValues: Values = {\r\n    projectName: \"\",\r\n    description: \"\",\r\n    categoryId: 0,\r\n  };\r\n  const { show, setShow, nodeRef } = useClickOutside();\r\n  const handleToggleDropdown = () => {\r\n    setShow(!show);\r\n  };\r\n  const { projectCategory } = useSelector(\r\n    (state: RootState) => state.projectReducer\r\n  );\r\n  const { add } = useToast();\r\n\r\n  useEffect(() => {\r\n    dispatch(getProjectCategoryApi());\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"bg-white rounded-xl py-10 px-[66px]\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"py-4 px-14  bg-text4 bg-opacity-5 rounded-xl font-bold text-[25px] inline-block\">\r\n            Start a Project 🚀\r\n          </h1>\r\n\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={Yup.object().shape({\r\n              projectName: Yup.string().required(\r\n                \"This project name already registered\"\r\n              ),\r\n\r\n              description: Yup.string().required(\r\n                \"This description already registered\"\r\n              ),\r\n              categoryId: Yup.string().required(\r\n                \"This category already registered\"\r\n              ),\r\n            })}\r\n            onSubmit={(values, { setSubmitting, resetForm }) => {\r\n              setTimeout(async () => {\r\n                setSubmitting(false);\r\n                await dispatch(createProject(values));\r\n                add({\r\n                  type: \"success\",\r\n                  message: \"Create project successfully\",\r\n                  duration: 3000,\r\n                  position: \"topCenter\",\r\n                });\r\n                resetForm();\r\n              });\r\n            }}\r\n          >\r\n            {({ isSubmitting, errors, setFieldValue, values }) => {\r\n              const placeholderCategory =\r\n                values.categoryId === 1\r\n                  ? \"Dự án web\"\r\n                  : values.categoryId === 2\r\n                  ? \"Dự án phần mềm\"\r\n                  : values.categoryId === 3\r\n                  ? \"Dự án di động\"\r\n                  : \"Select a project category\";\r\n              const handleSelectCategory = (value: number) => {\r\n                setShow(false);\r\n                setFieldValue(\"categoryId\", value);\r\n              };\r\n\r\n              return (\r\n                <Form>\r\n                  <FormRow>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"projectName\">Project name *</Label>\r\n                      <Input\r\n                        id=\"projectName\"\r\n                        name=\"projectName\"\r\n                        type=\"text\"\r\n                        placeholder=\"Please enter project name...\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label>Project category *</Label>\r\n                      <Dropdown>\r\n                        <Select\r\n                          nodeRef={nodeRef}\r\n                          show={show}\r\n                          placeholder={placeholderCategory}\r\n                          onClick={handleToggleDropdown}\r\n                        />\r\n                        <List show={show}>\r\n                          {projectCategory.map(\r\n                            ({ id, projectCategoryName }) => {\r\n                              const selected = id === values.categoryId;\r\n                              return (\r\n                                <Option\r\n                                  className={\r\n                                    selected\r\n                                      ? \"text-[#42526e] bg-[rgba(9,30,66,0.04)] border-l-4 border-l-primary bg-opacity-20\"\r\n                                      : \"\"\r\n                                  }\r\n                                  key={id}\r\n                                  onClick={() => {\r\n                                    console.log(values);\r\n\r\n                                    handleSelectCategory(id);\r\n                                  }}\r\n                                >\r\n                                  {projectCategoryName}\r\n                                </Option>\r\n                              );\r\n                            }\r\n                          )}\r\n                        </List>\r\n                      </Dropdown>\r\n                    </FormGroup>\r\n                  </FormRow>\r\n                  <FormGroup>\r\n                    <Label>Description *</Label>\r\n                    <TextTiny control=\"tiny-mce\" name=\"description\" />\r\n                  </FormGroup>\r\n                  <div className=\" flex items-center justify-center\">\r\n                    <Button\r\n                      isLoading={isSubmitting}\r\n                      type=\"submit\"\r\n                      className=\" my-3\"\r\n                      kind=\"primary\"\r\n                    >\r\n                      Add new project\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddProject;\r\n"],"names":["children","onClick","className","isLoading","rest","child","defaultClassName","kind","href","to","show","placeholder","nodeRef","ref","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","withErrorBoundary","props","useField","field","meta","touched","error","FallbackComponent","ErrorComponent","control","name","value","id","form","setFieldValue","initialValue","init","height","menubar","toolbar","content_style","onEditorChange","content","editor","htmlFor","useClickOutside","useState","setShow","useRef","useEffect","handleOutside","ev","current","contains","target","document","addEventListener","removeEventListener","dispatch","useDispatch","handleToggleDropdown","projectCategory","useSelector","state","projectReducer","add","useToast","getProjectCategoryApi","Fragment","initialValues","projectName","description","categoryId","validationSchema","Yup","shape","required","onSubmit","values","setSubmitting","resetForm","setTimeout","createProject","type","message","duration","position","isSubmitting","errors","placeholderCategory","map","projectCategoryName","selected","console","log"],"sourceRoot":""}