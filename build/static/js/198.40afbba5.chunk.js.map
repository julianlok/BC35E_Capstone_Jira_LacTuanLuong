{"version":3,"file":"static/js/198.40afbba5.chunk.js","mappings":"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","sources":["../node_modules/fast-deep-equal/index.js","../node_modules/@react-dnd/shallowequal/src/index.ts","../node_modules/react-dnd/src/hooks/useMonitorOutput.ts","../node_modules/react-dnd/src/hooks/useCollector.ts","../node_modules/react-dnd/src/hooks/useCollectedProps.ts","../node_modules/react-dnd/src/hooks/useDragDropManager.ts","../node_modules/react-dnd/src/hooks/useDrag/connectors.ts","../node_modules/react-dnd/src/internals/SourceConnector.ts","../node_modules/react-dnd/src/internals/DragSourceMonitorImpl.ts","../node_modules/react-dnd/src/hooks/useDrag/DragSourceImpl.ts","../node_modules/react-dnd/src/hooks/useDrag/useRegisteredDragSource.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSource.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragType.ts","../node_modules/react-dnd/src/hooks/useDrag/useDrag.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSourceMonitor.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSourceConnector.ts","../node_modules/react-dnd/src/hooks/useDrop/connectors.ts","../node_modules/react-dnd/src/internals/TargetConnector.ts","../node_modules/react-dnd/src/internals/DropTargetMonitorImpl.ts","../node_modules/react-dnd/src/hooks/useDrop/DropTargetImpl.ts","../node_modules/react-dnd/src/hooks/useDrop/useRegisteredDropTarget.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTarget.ts","../node_modules/react-dnd/src/hooks/useDrop/useAccept.ts","../node_modules/react-dnd/src/hooks/useDrop/useDrop.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTargetMonitor.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTargetConnector.ts","../node_modules/react-dnd/src/hooks/useIsomorphicLayoutEffect.ts","../node_modules/react-dnd/src/hooks/useOptionalFactory.ts","../node_modules/react-dnd/src/internals/isRef.ts","../node_modules/react-dnd/src/internals/registration.ts","../node_modules/react-dnd/src/internals/wrapConnectorHooks.ts"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","export function shallowEqual<T>(\n\tobjA: T,\n\tobjB: T,\n\tcompare?: (a: T, b: T, key?: string) => boolean | void,\n\tcompareContext?: any,\n) {\n\tlet compareResult = compare\n\t\t? compare.call(compareContext, objA, objB)\n\t\t: void 0\n\tif (compareResult !== void 0) {\n\t\treturn !!compareResult\n\t}\n\n\tif (objA === objB) {\n\t\treturn true\n\t}\n\n\tif (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {\n\t\treturn false\n\t}\n\n\tconst keysA = Object.keys(objA)\n\tconst keysB = Object.keys(objB)\n\n\tif (keysA.length !== keysB.length) {\n\t\treturn false\n\t}\n\n\tconst bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB)\n\n\t// Test for A's keys different from B.\n\tfor (let idx = 0; idx < keysA.length; idx++) {\n\t\tconst key = keysA[idx] as string\n\n\t\tif (!bHasOwnProperty(key)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst valueA = (objA as any)[key]\n\t\tconst valueB = (objB as any)[key]\n\n\t\tcompareResult = compare\n\t\t\t? compare.call(compareContext, valueA, valueB, key)\n\t\t\t: void 0\n\n\t\tif (\n\t\t\tcompareResult === false ||\n\t\t\t(compareResult === void 0 && valueA !== valueB)\n\t\t) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n","import type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useCollector } from './useCollector.js'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\nexport function useMonitorOutput<Monitor extends HandlerManager, Collected>(\n\tmonitor: Monitor & MonitorEventEmitter,\n\tcollect: (monitor: Monitor) => Collected,\n\tonCollect?: () => void,\n): Collected {\n\tconst [collected, updateCollected] = useCollector(monitor, collect, onCollect)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction subscribeToMonitorStateChange() {\n\t\t\tconst handlerId = monitor.getHandlerId()\n\t\t\tif (handlerId == null) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn monitor.subscribeToStateChange(updateCollected, {\n\t\t\t\thandlerIds: [handlerId],\n\t\t\t})\n\t\t},\n\t\t[monitor, updateCollected],\n\t)\n\n\treturn collected\n}\n","import equal from 'fast-deep-equal'\nimport { useCallback, useState } from 'react'\n\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\n/**\n *\n * @param monitor The monitor to collect state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */\nexport function useCollector<T, S>(\n\tmonitor: T,\n\tcollect: (monitor: T) => S,\n\tonUpdate?: () => void,\n): [S, () => void] {\n\tconst [collected, setCollected] = useState(() => collect(monitor))\n\n\tconst updateCollected = useCallback(() => {\n\t\tconst nextValue = collect(monitor)\n\t\t// This needs to be a deep-equality check because some monitor-collected values\n\t\t// include XYCoord objects that may be equivalent, but do not have instance equality.\n\t\tif (!equal(collected, nextValue)) {\n\t\t\tsetCollected(nextValue)\n\t\t\tif (onUpdate) {\n\t\t\t\tonUpdate()\n\t\t\t}\n\t\t}\n\t}, [collected, monitor, onUpdate])\n\n\t// update the collected properties after react renders.\n\t// Note that the \"Dustbin Stress Test\" fails if this is not\n\t// done when the component updates\n\tuseIsomorphicLayoutEffect(updateCollected)\n\n\treturn [collected, updateCollected]\n}\n","import type { Connector } from '../internals/index.js'\nimport type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useMonitorOutput } from './useMonitorOutput.js'\n\nexport function useCollectedProps<Collected, Monitor extends HandlerManager>(\n\tcollector: ((monitor: Monitor) => Collected) | undefined,\n\tmonitor: Monitor & MonitorEventEmitter,\n\tconnector: Connector,\n) {\n\treturn useMonitorOutput(monitor, collector || (() => ({} as Collected)), () =>\n\t\tconnector.reconnect(),\n\t)\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { DragDropManager } from 'dnd-core'\nimport { useContext } from 'react'\n\nimport { DndContext } from '../core/index.js'\n\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager(): DragDropManager {\n\tconst { dragDropManager } = useContext(DndContext)\n\tinvariant(dragDropManager != null, 'Expected drag drop context')\n\treturn dragDropManager as DragDropManager\n}\n","import { useMemo } from 'react'\n\nimport type { SourceConnector } from '../../internals/index.js'\n\nexport function useConnectDragSource(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragSource(), [connector])\n}\n\nexport function useConnectDragPreview(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragPreview(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { ReactElement, Ref, RefObject } from 'react'\n\nimport type { DragPreviewOptions, DragSourceOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport interface Connector {\n\thooks: any\n\tconnectTarget: any\n\treceiveHandlerId(handlerId: Identifier | null): void\n\treconnect(): void\n}\n\nexport class SourceConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdragSource: (\n\t\t\tnode: Element | ReactElement | Ref<any>,\n\t\t\toptions?: DragSourceOptions,\n\t\t) => {\n\t\t\tthis.clearDragSource()\n\t\t\tthis.dragSourceOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragSourceRef = node as RefObject<any>\n\t\t\t} else {\n\t\t\t\tthis.dragSourceNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragSource()\n\t\t},\n\t\tdragPreview: (node: any, options?: DragPreviewOptions) => {\n\t\t\tthis.clearDragPreview()\n\t\t\tthis.dragPreviewOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragPreviewRef = node\n\t\t\t} else {\n\t\t\t\tthis.dragPreviewNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragPreview()\n\t\t},\n\t})\n\tprivate handlerId: Identifier | null = null\n\n\t// The drop target may either be attached via ref or connect function\n\tprivate dragSourceRef: RefObject<any> | null = null\n\tprivate dragSourceNode: any\n\tprivate dragSourceOptionsInternal: DragSourceOptions | null = null\n\tprivate dragSourceUnsubscribe: Unsubscribe | undefined\n\n\t// The drag preview may either be attached via ref or connect function\n\tprivate dragPreviewRef: RefObject<any> | null = null\n\tprivate dragPreviewNode: any\n\tprivate dragPreviewOptionsInternal: DragPreviewOptions | null = null\n\tprivate dragPreviewUnsubscribe: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDragSource: any = null\n\tprivate lastConnectedDragSourceOptions: any = null\n\tprivate lastConnectedDragPreview: any = null\n\tprivate lastConnectedDragPreviewOptions: any = null\n\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (this.handlerId === newHandlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dragSource\n\t}\n\n\tpublic get dragSourceOptions(): DragSourceOptions | null {\n\t\treturn this.dragSourceOptionsInternal\n\t}\n\tpublic set dragSourceOptions(options: DragSourceOptions | null) {\n\t\tthis.dragSourceOptionsInternal = options\n\t}\n\n\tpublic get dragPreviewOptions(): DragPreviewOptions | null {\n\t\treturn this.dragPreviewOptionsInternal\n\t}\n\n\tpublic set dragPreviewOptions(options: DragPreviewOptions | null) {\n\t\tthis.dragPreviewOptionsInternal = options\n\t}\n\n\tpublic reconnect(): void {\n\t\tconst didChange = this.reconnectDragSource()\n\t\tthis.reconnectDragPreview(didChange)\n\t}\n\n\tprivate reconnectDragSource(): boolean {\n\t\tconst dragSource = this.dragSource\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragSourceChange() ||\n\t\t\tthis.didDragSourceOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragSource()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn didChange\n\t\t}\n\t\tif (!dragSource) {\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\treturn didChange\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\tthis.lastConnectedDragSourceOptions = this.dragSourceOptions\n\t\t\tthis.dragSourceUnsubscribe = this.backend.connectDragSource(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragSource,\n\t\t\t\tthis.dragSourceOptions,\n\t\t\t)\n\t\t}\n\t\treturn didChange\n\t}\n\n\tprivate reconnectDragPreview(forceDidChange = false): void {\n\t\tconst dragPreview = this.dragPreview\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tforceDidChange ||\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragPreviewChange() ||\n\t\t\tthis.didDragPreviewOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragPreview()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dragPreview) {\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\tthis.lastConnectedDragPreviewOptions = this.dragPreviewOptions\n\t\t\tthis.dragPreviewUnsubscribe = this.backend.connectDragPreview(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragPreview,\n\t\t\t\tthis.dragPreviewOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didConnectedDragSourceChange(): boolean {\n\t\treturn this.lastConnectedDragSource !== this.dragSource\n\t}\n\n\tprivate didConnectedDragPreviewChange(): boolean {\n\t\treturn this.lastConnectedDragPreview !== this.dragPreview\n\t}\n\n\tprivate didDragSourceOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragSourceOptions,\n\t\t\tthis.dragSourceOptions,\n\t\t)\n\t}\n\n\tprivate didDragPreviewOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragPreviewOptions,\n\t\t\tthis.dragPreviewOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDragSource() {\n\t\tif (this.dragSourceUnsubscribe) {\n\t\t\tthis.dragSourceUnsubscribe()\n\t\t\tthis.dragSourceUnsubscribe = undefined\n\t\t}\n\t}\n\n\tpublic disconnectDragPreview() {\n\t\tif (this.dragPreviewUnsubscribe) {\n\t\t\tthis.dragPreviewUnsubscribe()\n\t\t\tthis.dragPreviewUnsubscribe = undefined\n\t\t\tthis.dragPreviewNode = null\n\t\t\tthis.dragPreviewRef = null\n\t\t}\n\t}\n\n\tprivate get dragSource() {\n\t\treturn (\n\t\t\tthis.dragSourceNode || (this.dragSourceRef && this.dragSourceRef.current)\n\t\t)\n\t}\n\n\tprivate get dragPreview() {\n\t\treturn (\n\t\t\tthis.dragPreviewNode ||\n\t\t\t(this.dragPreviewRef && this.dragPreviewRef.current)\n\t\t)\n\t}\n\n\tprivate clearDragSource() {\n\t\tthis.dragSourceNode = null\n\t\tthis.dragSourceRef = null\n\t}\n\n\tprivate clearDragPreview() {\n\t\tthis.dragPreviewNode = null\n\t\tthis.dragPreviewRef = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DragSourceMonitor } from '../types/index.js'\n\nlet isCallingCanDrag = false\nlet isCallingIsDragging = false\n\nexport class DragSourceMonitorImpl implements DragSourceMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate sourceId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(sourceId: Identifier | null): void {\n\t\tthis.sourceId = sourceId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.sourceId\n\t}\n\n\tpublic canDrag(): boolean {\n\t\tinvariant(\n\t\t\t!isCallingCanDrag,\n\t\t\t'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrag = true\n\t\t\treturn this.internalMonitor.canDragSource(this.sourceId as Identifier)\n\t\t} finally {\n\t\t\tisCallingCanDrag = false\n\t\t}\n\t}\n\n\tpublic isDragging(): boolean {\n\t\tif (!this.sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingIsDragging,\n\t\t\t'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingIsDragging = true\n\t\t\treturn this.internalMonitor.isDraggingSource(this.sourceId)\n\t\t} finally {\n\t\t\tisCallingIsDragging = false\n\t\t}\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic isDraggingSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.isDraggingSource(sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: Identifier,\n\t\toptions?: { shallow: boolean },\n\t): boolean {\n\t\treturn this.internalMonitor.isOverTarget(targetId, options)\n\t}\n\n\tpublic getTargetIds(): Identifier[] {\n\t\treturn this.internalMonitor.getTargetIds()\n\t}\n\n\tpublic isSourcePublic(): boolean | null {\n\t\treturn this.internalMonitor.isSourcePublic()\n\t}\n\n\tpublic getSourceId(): Identifier | null {\n\t\treturn this.internalMonitor.getSourceId()\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToOffsetChange(listener)\n\t}\n\n\tpublic canDragSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDragSource(sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDropOnTarget(targetId)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DragDropMonitor, DragSource, Identifier } from 'dnd-core'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragObjectFactory, DragSourceHookSpec } from '../types.js'\n\nexport class DragSourceImpl<O, R, P> implements DragSource {\n\tpublic constructor(\n\t\tpublic spec: DragSourceHookSpec<O, R, P>,\n\t\tprivate monitor: DragSourceMonitor<O, R>,\n\t\tprivate connector: Connector,\n\t) {}\n\n\tpublic beginDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\n\t\tlet result: O | null = null\n\t\tif (typeof spec.item === 'object') {\n\t\t\tresult = spec.item as O\n\t\t} else if (typeof spec.item === 'function') {\n\t\t\tresult = (spec.item as DragObjectFactory<O>)(monitor)\n\t\t} else {\n\t\t\tresult = {} as O\n\t\t}\n\t\treturn result ?? null\n\t}\n\n\tpublic canDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (typeof spec.canDrag === 'boolean') {\n\t\t\treturn spec.canDrag\n\t\t} else if (typeof spec.canDrag === 'function') {\n\t\t\treturn spec.canDrag(monitor)\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n\n\tpublic isDragging(globalMonitor: DragDropMonitor, target: Identifier) {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst { isDragging } = spec\n\t\treturn isDragging\n\t\t\t? isDragging(monitor)\n\t\t\t: target === globalMonitor.getSourceId()\n\t}\n\n\tpublic endDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst connector = this.connector\n\t\tconst { end } = spec\n\t\tif (end) {\n\t\t\tend(monitor.getItem(), monitor)\n\t\t}\n\t\tconnector.reconnect()\n\t}\n}\n","import type { SourceConnector } from '../../internals/index.js'\nimport { registerSource } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useDragSource } from './useDragSource.js'\nimport { useDragType } from './useDragType.js'\n\nexport function useRegisteredDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: SourceConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst handler = useDragSource(spec, monitor, connector)\n\tconst itemType = useDragType(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDragSource() {\n\t\t\tif (itemType != null) {\n\t\t\t\tconst [handlerId, unregister] = registerSource(\n\t\t\t\t\titemType,\n\t\t\t\t\thandler,\n\t\t\t\t\tmanager,\n\t\t\t\t)\n\t\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\t\treturn unregister\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\t[manager, monitor, connector, handler, itemType],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { DragSourceImpl } from './DragSourceImpl.js'\n\nexport function useDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: Connector,\n) {\n\tconst handler = useMemo(\n\t\t() => new DragSourceImpl(spec, monitor, connector),\n\t\t[monitor, connector],\n\t)\n\tuseEffect(() => {\n\t\thandler.spec = spec\n\t}, [spec])\n\treturn handler\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DragSourceHookSpec } from '../types.js'\n\nexport function useDragType(\n\tspec: DragSourceHookSpec<any, any, any>,\n): Identifier {\n\treturn useMemo(() => {\n\t\tconst result: Identifier = spec.type\n\t\tinvariant(result != null, 'spec.type must be defined')\n\t\treturn result\n\t}, [spec])\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tConnectDragPreview,\n\tConnectDragSource,\n} from '../../types/index.js'\nimport type { DragSourceHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDragPreview, useConnectDragSource } from './connectors.js'\nimport { useDragSourceConnector } from './useDragSourceConnector.js'\nimport { useDragSourceMonitor } from './useDragSourceMonitor.js'\nimport { useRegisteredDragSource } from './useRegisteredDragSource.js'\n\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrag<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDragSourceHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDragSource, ConnectDragPreview] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tinvariant(\n\t\t!(spec as any).begin,\n\t\t`useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)`,\n\t)\n\n\tconst monitor = useDragSourceMonitor<DragObject, DropResult>()\n\tconst connector = useDragSourceConnector(spec.options, spec.previewOptions)\n\tuseRegisteredDragSource(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDragSource(connector),\n\t\tuseConnectDragPreview(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DragSourceMonitorImpl } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDragSourceMonitor<O, R>(): DragSourceMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo<DragSourceMonitor<O, R>>(\n\t\t() => new DragSourceMonitorImpl(manager),\n\t\t[manager],\n\t)\n}\n","import { useMemo } from 'react'\n\nimport { SourceConnector } from '../../internals/index.js'\nimport type {\n\tDragPreviewOptions,\n\tDragSourceOptions,\n} from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDragSourceConnector(\n\tdragSourceOptions: DragSourceOptions | undefined,\n\tdragPreviewOptions: DragPreviewOptions | undefined,\n): SourceConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new SourceConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragSourceOptions = dragSourceOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragSource()\n\t}, [connector, dragSourceOptions])\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragPreviewOptions = dragPreviewOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragPreview()\n\t}, [connector, dragPreviewOptions])\n\treturn connector\n}\n","import { useMemo } from 'react'\n\nimport type { TargetConnector } from '../../internals/index.js'\n\nexport function useConnectDropTarget(connector: TargetConnector) {\n\treturn useMemo(() => connector.hooks.dropTarget(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { RefObject } from 'react'\n\nimport type { DropTargetOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport type { Connector } from './SourceConnector.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport class TargetConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdropTarget: (node: any, options: DropTargetOptions) => {\n\t\t\tthis.clearDropTarget()\n\t\t\tthis.dropTargetOptions = options\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dropTargetRef = node\n\t\t\t} else {\n\t\t\t\tthis.dropTargetNode = node\n\t\t\t}\n\t\t\tthis.reconnect()\n\t\t},\n\t})\n\n\tprivate handlerId: Identifier | null = null\n\t// The drop target may either be attached via ref or connect function\n\tprivate dropTargetRef: RefObject<any> | null = null\n\tprivate dropTargetNode: any\n\tprivate dropTargetOptionsInternal: DropTargetOptions | null = null\n\tprivate unsubscribeDropTarget: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDropTarget: any = null\n\tprivate lastConnectedDropTargetOptions: DropTargetOptions | null = null\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dropTarget\n\t}\n\n\tpublic reconnect(): void {\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didDropTargetChange() ||\n\t\t\tthis.didOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDropTarget()\n\t\t}\n\n\t\tconst dropTarget = this.dropTarget\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dropTarget) {\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\tthis.lastConnectedDropTargetOptions = this.dropTargetOptions\n\n\t\t\tthis.unsubscribeDropTarget = this.backend.connectDropTarget(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdropTarget,\n\t\t\t\tthis.dropTargetOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (newHandlerId === this.handlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get dropTargetOptions(): DropTargetOptions {\n\t\treturn this.dropTargetOptionsInternal\n\t}\n\tpublic set dropTargetOptions(options: DropTargetOptions) {\n\t\tthis.dropTargetOptionsInternal = options\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didDropTargetChange(): boolean {\n\t\treturn this.lastConnectedDropTarget !== this.dropTarget\n\t}\n\n\tprivate didOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDropTargetOptions,\n\t\t\tthis.dropTargetOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDropTarget() {\n\t\tif (this.unsubscribeDropTarget) {\n\t\t\tthis.unsubscribeDropTarget()\n\t\t\tthis.unsubscribeDropTarget = undefined\n\t\t}\n\t}\n\n\tprivate get dropTarget() {\n\t\treturn (\n\t\t\tthis.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current)\n\t\t)\n\t}\n\n\tprivate clearDropTarget() {\n\t\tthis.dropTargetRef = null\n\t\tthis.dropTargetNode = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DropTarget } from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\n\nexport class DropTargetImpl<O, R, P> implements DropTarget {\n\tpublic constructor(\n\t\tpublic spec: DropTargetHookSpec<O, R, P>,\n\t\tprivate monitor: DropTargetMonitor<O, R>,\n\t) {}\n\n\tpublic canDrop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\treturn spec.canDrop ? spec.canDrop(monitor.getItem(), monitor) : true\n\t}\n\n\tpublic hover() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.hover) {\n\t\t\tspec.hover(monitor.getItem(), monitor)\n\t\t}\n\t}\n\n\tpublic drop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.drop) {\n\t\t\treturn spec.drop(monitor.getItem(), monitor)\n\t\t}\n\t\treturn\n\t}\n}\n","import type { TargetConnector } from '../../internals/index.js'\nimport { registerTarget } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useAccept } from './useAccept.js'\nimport { useDropTarget } from './useDropTarget.js'\n\nexport function useRegisteredDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n\tconnector: TargetConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst dropTarget = useDropTarget(spec, monitor)\n\tconst accept = useAccept(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDropTarget() {\n\t\t\tconst [handlerId, unregister] = registerTarget(\n\t\t\t\taccept,\n\t\t\t\tdropTarget,\n\t\t\t\tmanager,\n\t\t\t)\n\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\treturn unregister\n\t\t},\n\t\t[\n\t\t\tmanager,\n\t\t\tmonitor,\n\t\t\tdropTarget,\n\t\t\tconnector,\n\t\t\taccept.map((a) => a.toString()).join('|'),\n\t\t],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { DropTargetImpl } from './DropTargetImpl.js'\n\nexport function useDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n) {\n\tconst dropTarget = useMemo(() => new DropTargetImpl(spec, monitor), [monitor])\n\tuseEffect(() => {\n\t\tdropTarget.spec = spec\n\t}, [spec])\n\treturn dropTarget\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DropTargetHookSpec } from '../types.js'\n\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */\nexport function useAccept<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n): Identifier[] {\n\tconst { accept } = spec\n\treturn useMemo(() => {\n\t\tinvariant(spec.accept != null, 'accept must be defined')\n\t\treturn Array.isArray(accept) ? accept : [accept]\n\t}, [accept])\n}\n","import type { ConnectDropTarget } from '../../types/index.js'\nimport type { DropTargetHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDropTarget } from './connectors.js'\nimport { useDropTargetConnector } from './useDropTargetConnector.js'\nimport { useDropTargetMonitor } from './useDropTargetMonitor.js'\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget.js'\n\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrop<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDropTargetHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDropTarget] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tconst monitor = useDropTargetMonitor<DragObject, DropResult>()\n\tconst connector = useDropTargetConnector(spec.options)\n\tuseRegisteredDropTarget(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDropTarget(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DropTargetMonitorImpl } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDropTargetMonitor<O, R>(): DropTargetMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo(() => new DropTargetMonitorImpl(manager), [manager])\n}\n","import { useMemo } from 'react'\n\nimport { TargetConnector } from '../../internals/index.js'\nimport type { DropTargetOptions } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDropTargetConnector(\n\toptions: DropTargetOptions,\n): TargetConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new TargetConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dropTargetOptions = options || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDropTarget()\n\t}, [options])\n\treturn connector\n}\n","import { useEffect, useLayoutEffect } from 'react'\n\n// suppress the useLayoutEffect warning on server side.\nexport const useIsomorphicLayoutEffect =\n\ttypeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import { useMemo } from 'react'\n\nimport type { FactoryOrInstance } from './types.js'\n\nexport function useOptionalFactory<T>(\n\targ: FactoryOrInstance<T>,\n\tdeps?: unknown[],\n): T {\n\tconst memoDeps = [...(deps || [])]\n\tif (deps == null && typeof arg !== 'function') {\n\t\tmemoDeps.push(arg)\n\t}\n\treturn useMemo<T>(() => {\n\t\treturn typeof arg === 'function' ? (arg as () => T)() : (arg as T)\n\t}, memoDeps)\n}\n","export interface Ref<T> {\n\tcurrent: T\n}\n\nexport function isRef(obj: unknown): boolean {\n\treturn (\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tobj !== null &&\n\t\ttypeof obj === 'object' &&\n\t\tObject.prototype.hasOwnProperty.call(obj, 'current')\n\t)\n}\n","import type {\n\tDragDropManager,\n\tDragSource,\n\tDropTarget,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n\tUnsubscribe,\n} from 'dnd-core'\n\nexport function registerTarget(\n\ttype: TargetType,\n\ttarget: DropTarget,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst targetId = registry.addTarget(type, target)\n\n\treturn [targetId, () => registry.removeTarget(targetId)]\n}\n\nexport function registerSource(\n\ttype: SourceType,\n\tsource: DragSource,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst sourceId = registry.addSource(type, source)\n\n\treturn [sourceId, () => registry.removeSource(sourceId)]\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { ReactElement } from 'react'\nimport { cloneElement, isValidElement } from 'react'\n\nfunction throwIfCompositeComponentElement(element: ReactElement<any>) {\n\t// Custom components can no longer be wrapped directly in React DnD 2.0\n\t// so that we don't need to depend on findDOMNode() from react-dom.\n\tif (typeof element.type === 'string') {\n\t\treturn\n\t}\n\n\tconst displayName =\n\t\t(element.type as any).displayName || element.type.name || 'the component'\n\n\tthrow new Error(\n\t\t'Only native element nodes can now be passed to React DnD connectors.' +\n\t\t\t`You can either wrap ${displayName} into a <div>, or turn it into a ` +\n\t\t\t'drag source or a drop target itself.',\n\t)\n}\n\nfunction wrapHookToRecognizeElement(hook: (node: any, options: any) => void) {\n\treturn (elementOrNode = null, options = null) => {\n\t\t// When passed a node, call the hook straight away.\n\t\tif (!isValidElement(elementOrNode)) {\n\t\t\tconst node = elementOrNode\n\t\t\thook(node, options)\n\t\t\t// return the node so it can be chained (e.g. when within callback refs\n\t\t\t// <div ref={node => connectDragSource(connectDropTarget(node))}/>\n\t\t\treturn node\n\t\t}\n\n\t\t// If passed a ReactElement, clone it and attach this function as a ref.\n\t\t// This helps us achieve a neat API where user doesn't even know that refs\n\t\t// are being used under the hood.\n\t\tconst element: ReactElement | null = elementOrNode\n\t\tthrowIfCompositeComponentElement(element as any)\n\n\t\t// When no options are passed, use the hook directly\n\t\tconst ref = options ? (node: Element) => hook(node, options) : hook\n\t\treturn cloneWithRef(element, ref)\n\t}\n}\n\nexport function wrapConnectorHooks(hooks: any) {\n\tconst wrappedHooks: any = {}\n\n\tObject.keys(hooks).forEach((key) => {\n\t\tconst hook = hooks[key]\n\n\t\t// ref objects should be passed straight through without wrapping\n\t\tif (key.endsWith('Ref')) {\n\t\t\twrappedHooks[key] = hooks[key]\n\t\t} else {\n\t\t\tconst wrappedHook = wrapHookToRecognizeElement(hook)\n\t\t\twrappedHooks[key] = () => wrappedHook\n\t\t}\n\t})\n\n\treturn wrappedHooks\n}\n\nfunction setRef(ref: any, node: any) {\n\tif (typeof ref === 'function') {\n\t\tref(node)\n\t} else {\n\t\tref.current = node\n\t}\n}\n\nfunction cloneWithRef(element: any, newRef: any): ReactElement<any> {\n\tconst previousRef = element.ref\n\tinvariant(\n\t\ttypeof previousRef !== 'string',\n\t\t'Cannot connect React DnD to an element with an existing string ref. ' +\n\t\t\t'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n\t\t\t'Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs',\n\t)\n\n\tif (!previousRef) {\n\t\t// When there is no ref on the element, use the new ref directly\n\t\treturn cloneElement(element, {\n\t\t\tref: newRef,\n\t\t})\n\t} else {\n\t\treturn cloneElement(element, {\n\t\t\tref: (node: any) => {\n\t\t\t\tsetRef(previousRef, node)\n\t\t\t\tsetRef(newRef, node)\n\t\t\t},\n\t\t})\n\t}\n}\n"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","shallowEqual","objA","objB","compare","compareContext","compareResult","keysA","keysB","bHasOwnProperty","bind","idx","valueA","valueB","useMonitorOutput","monitor","collect","onCollect","onUpdate","useState","collected","setCollected","updateCollected","useCallback","nextValue","useIsomorphicLayoutEffect","useCollector","handlerId","getHandlerId","subscribeToStateChange","handlerIds","useCollectedProps","collector","connector","reconnect","useDragDropManager","dragDropManager","useContext","DndContext","invariant","useConnectDragSource","useMemo","hooks","dragSource","useConnectDragPreview","dragPreview","SourceConnector","backend","wrapConnectorHooks","node","options","clearDragSource","dragSourceOptions","isRef","dragSourceRef","dragSourceNode","reconnectDragSource","clearDragPreview","dragPreviewOptions","dragPreviewRef","dragPreviewNode","reconnectDragPreview","dragSourceOptionsInternal","dragPreviewOptionsInternal","lastConnectedHandlerId","lastConnectedDragSource","lastConnectedDragSourceOptions","lastConnectedDragPreview","lastConnectedDragPreviewOptions","this","newHandlerId","didChange","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","dragSourceUnsubscribe","connectDragSource","forceDidChange","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","dragPreviewUnsubscribe","connectDragPreview","undefined","current","isCallingCanDrag","isCallingIsDragging","DragSourceMonitorImpl","manager","sourceId","internalMonitor","getMonitor","canDragSource","isDraggingSource","listener","targetId","isOverTarget","getTargetIds","isSourcePublic","getSourceId","subscribeToOffsetChange","canDropOnTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","DragSourceImpl","spec","result","item","canDrag","globalMonitor","target","isDragging","end","useRegisteredDragSource","handler","useEffect","useDragSource","itemType","type","useDragType","registerSource","unregister","receiveHandlerId","useDrag","specArg","deps","useOptionalFactory","begin","useDragSourceMonitor","getBackend","useDragSourceConnector","previewOptions","useConnectDropTarget","dropTarget","TargetConnector","clearDropTarget","dropTargetOptions","dropTargetRef","dropTargetNode","dropTargetOptionsInternal","lastConnectedDropTarget","lastConnectedDropTargetOptions","didDropTargetChange","didOptionsChange","disconnectDropTarget","unsubscribeDropTarget","connectDropTarget","isCallingCanDrop","DropTargetMonitorImpl","DropTargetImpl","canDrop","hover","drop","useRegisteredDropTarget","useDropTarget","accept","useAccept","registerTarget","map","join","useDrop","useDropTargetMonitor","useDropTargetConnector","window","useLayoutEffect","arg","memoDeps","push","obj","registry","getRegistry","addTarget","removeTarget","addSource","removeSource","throwIfCompositeComponentElement","element","displayName","name","Error","wrappedHooks","forEach","hook","endsWith","wrappedHook","elementOrNode","isValidElement","ref","cloneWithRef","wrapHookToRecognizeElement","setRef","newRef","previousRef","cloneElement"],"sourceRoot":""}