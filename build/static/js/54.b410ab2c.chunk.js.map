{"version":3,"file":"static/js/54.b410ab2c.chunk.js","mappings":"yHAqBA,IAfqB,SAAH,GAGJ,IAAD,IAFXA,KAAAA,OAAI,MAAG,sBAAqB,MAC5BC,QAAAA,OAAO,MAAG,WAAO,EAAC,EAElB,OACE,oBACEC,UAAU,gJACVD,QAASA,EAAQ,WAEjB,gBAAKE,OAAO,sBAAsBC,IAAI,SACtC,0BAAOJ,MAGb,C,6HCkEA,IAvEe,SAAH,GAME,IALZK,EAAQ,EAARA,SACAJ,EAAO,EAAPA,QAAQ,EAAD,EACPC,UAAAA,OAAS,MAAG,GAAE,MACdI,UAAAA,OAAS,OAAQ,EACdC,GAAI,YAEDC,EAAUF,GACd,gBAAKJ,UAAU,sGAEfG,EAGEI,EACF,sEAEF,OAAQF,EAAKG,MACX,IAAK,UACHD,GAEE,4EACF,MAEF,IAAK,YACHA,GAEE,8DACF,MAEF,IAAK,SACHA,GAEE,6GACF,MAEF,IAAK,UACHA,GAEE,mEACF,MAEF,IAAK,SACHA,GAEE,iEAMN,OAAIF,EAAKI,MAEL,SAAC,KAAI,CAACC,GAAIL,EAAKI,KAAMT,UAAWO,EAAmB,IAAMP,EAAU,SAChEG,KAIL,mCACEJ,QAASA,EACTC,UAAS,yBACPO,EACA,KACGH,EAAY,iCAAmC,IAAG,YACnDJ,IACAK,GAAI,aAEPC,IAGP,C,qIC9CA,KAAeK,EAAAA,EAAAA,oBA/BD,SAAH,GAIQ,IAHjBR,EAAQ,EAARA,SAAS,EAAD,EACRH,UAAAA,OAAS,MAAG,aAAY,EACrBY,GAAK,YAER,GAAsBC,EAAAA,EAAAA,IAASD,GAAM,eAA9BE,EAAK,KAAEC,EAAI,KAClB,OACE,iBAAKf,UAAU,YAAW,WACxB,kCACEA,UAAS,sHAAiHA,EAAS,YACjIe,EAAKC,SAAWD,EAAKE,MACjB,0BACA,iDAAgD,YAClDd,EAAW,QAAU,KACrBS,GACAE,IAELC,EAAKC,SAAWD,EAAKE,OACpB,iBAAMjB,UAAU,wGAAuG,SACpHe,EAAKE,QAEN,KACHd,IACC,iBAAMH,UAAU,wEAAuE,SACpFG,MAKX,GAEwC,CACtCe,kBAAmBC,EAAAA,G,4CCjBrB,IAbc,SAACP,GACb,IAAQT,EAAoCS,EAApCT,SAAS,EAA2BS,EAA1BQ,QAAAA,OAAO,MAAG,GAAE,EAAErB,EAAYa,EAAZb,QAChC,OACE,kBACEA,QAASA,EACTqB,QAASA,EACTpB,UAAU,6FAA4F,SAErGG,GAGP,C,4CCPA,IARuB,SAACS,GACtB,OACE,gBAAKZ,UAAU,yCAAwC,SAAC,gCAI5D,C,4CCIA,IARkB,SAAH,GAA6B,IAAvBG,EAAQ,EAARA,SACnB,OACE,gBAAKH,UAAU,gDAA+C,SAC3DG,GAGP,C,4CCqDA,IA1DsB,SAAH,GAA0D,IAAD,IAAnDkB,KAAAA,OAAI,OAAQ,MAAEtB,QAAAA,OAAO,MAAG,WAAa,IAC5D,OAAIsB,GAEA,2BACE,iBACEC,MAAO,GACPC,OAAQ,GACRC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BACN3B,QAASA,EAAQ,WAEjB,iBACE4B,EAAE,+FACFC,OAAO,UACPC,YAAa,EACbC,cAAc,QACdC,eAAe,WAEjB,iBACEJ,EAAE,0HACFC,OAAO,UACPC,YAAa,EACbC,cAAc,QACdC,eAAe,gBAMvB,2BACE,iBACET,MAAO,GACPC,OAAQ,GACRC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BACN3B,QAASA,EAAQ,WAEjB,iBACE4B,EAAE,4qBACFC,OAAO,UACPC,YAAa,EACbC,cAAc,QACdC,eAAe,WAEjB,iBACEJ,EAAE,eACFC,OAAO,UACPC,YAAa,EACbC,cAAc,QACdC,eAAe,cAKzB,C,+EC7De,SAASC,IAAiC,IAAvBC,EAAY,wDAC5C,GAA0BC,EAAAA,EAAAA,UAASD,GAAa,eAAzCE,EAAK,KAAEC,EAAQ,KAChBC,EAAoB,WACxBD,GAAUD,EACZ,EACA,MAAO,CACLA,MAAAA,EACAE,kBAAAA,EAEJ,C,2KCoCA,GAAe1B,EAAAA,EAAAA,oBArCE,SAAH,GAAgE,IAA1D2B,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAAK,EAAD,EAAExC,QAAAA,OAAO,MAAG,WAAO,EAAC,EAAEI,EAAQ,EAARA,SACrD,OACE,iBAAKH,UAAU,gCAA+B,WAC5C,iBACEA,UAAS,yGACPsC,EACI,4BACA,sCAENvC,QAASA,EAAQ,WAEjB,kBACEyC,KAAK,WACLxC,UAAU,SACVuC,KAAMA,EACNE,SAAU1C,KAEZ,iBAAMC,UAAS,sBAAiBsC,EAAU,GAAK,uBAAwB,UACrE,gBACEZ,MAAM,6BACNF,QAAQ,YACRC,KAAK,eACLzB,UAAU,UAAS,UAEnB,iBACE0C,SAAS,UACTf,EAAE,+IACFgB,SAAS,mBAKhBxC,IAAY,kBAAOH,UAAU,yBAAwB,SAAEG,MAG9D,GAE2C,CACzCe,kBAAmBC,EAAAA,I,sECwGrB,EArIiB,SAACP,GAChB,IAAMgC,GAAuBC,EAAAA,EAAAA,MAU7B,GACEb,EAAAA,EAAAA,KADac,EAAU,EAAjBX,MAAsCY,EAAgB,EAAnCV,kBAE3B,GACEL,EAAAA,EAAAA,KADagB,EAAY,EAAnBb,MAAwCc,EAAoB,EAAvCZ,kBAG7B,OACE,UAACa,EAAA,EAAY,CAACC,QAAQ,UAAS,WAC7B,eAAGnD,UAAU,6DAA4D,UAAC,2BAC/C,KACzB,SAAC,KAAI,CAACU,GAAI,SAAUV,UAAU,qCAAoC,SAAC,gBAIrE,SAACoD,EAAA,EAAY,CAACtD,KAAK,yBACnB,cAAGE,UAAU,uGAAsG,SAAC,2BAGpH,SAAC,KAAM,CACLqD,cAxB0B,CAC9BC,MAAO,GACPC,SAAU,GACVhB,KAAM,GACNiB,YAAa,IAqBTC,iBAAkBC,EAAAA,KAAaC,MAAM,CACnCpB,KAAMmB,EAAAA,KAAaE,SAAS,0BAC5BN,MAAOI,EAAAA,KACJE,SAAS,2BACTN,MAAM,yBACTE,YAAaE,EAAAA,KACVE,SAAS,kCACTC,QAjCT,0GAiC8B,6BAExBN,SAAUG,EAAAA,KACPE,SAAS,6BACTE,IAAI,EAAG,mCAEZC,SAAU,SAACC,EAAO,GAAwB,IAArBC,EAAa,EAAbA,cACfnB,GACFoB,YAAW,WACTD,GAAc,GACd,IAAME,GAAcC,EAAAA,EAAAA,IAAYJ,GAChCpB,EAAQuB,EACV,GAAG,IAEP,EAAE,SAED,YAA+B,IAA5BE,EAAY,EAAZA,aAAoB,EAANC,OAChB,OACE,UAAC,KAAI,YACH,UAACC,EAAA,EAAS,YACR,SAACC,EAAA,EAAK,CAACpD,QAAQ,OAAM,SAAC,YACtB,SAACqD,EAAA,EAAK,CACJC,GAAG,OACHnC,KAAK,OACLC,KAAK,OACLmC,YAAY,mCAIhB,UAACJ,EAAA,EAAS,YACR,SAACC,EAAA,EAAK,CAACpD,QAAQ,QAAO,SAAC,aACvB,SAACqD,EAAA,EAAK,CACJC,GAAG,QACHnC,KAAK,QACLC,KAAK,QACLmC,YAAY,oCAIhB,UAACJ,EAAA,EAAS,YACR,SAACC,EAAA,EAAK,CAACpD,QAAQ,cAAa,SAAC,aAC7B,SAACqD,EAAA,EAAK,CACJC,GAAG,cACHnC,KAAK,cACLC,KAAK,OACLmC,YAAY,oCAIhB,UAACJ,EAAA,EAAS,YACR,SAACC,EAAA,EAAK,CAACpD,QAAQ,WAAU,SAAC,gBAC1B,SAACqD,EAAA,EAAK,CACJC,GAAG,WACHnC,KAAK,WACLC,KAAMQ,EAAe,OAAS,WAC9B2B,YAAY,iCAAgC,UAE5C,SAACC,EAAA,EAAa,CACZvD,KAAM2B,EACNjD,QAASkD,UAKf,SAAC,EAAQ,CACPV,KAAK,OACLD,QAASQ,EACT/C,QAASgD,EAAiB,UAE1B,eAAG/C,UAAU,uDAAsD,UAAC,iBACnD,KACf,iBAAMA,UAAU,2BAA0B,SAAC,iBAAoB,IAAI,mCAClC,KACjC,iBAAMA,UAAU,2BAA0B,SAAC,mBAEpC,UAKX,SAAC6E,EAAA,EAAM,CACLrE,KAAK,UACLgC,KAAK,SACLxC,UAAU,+BACVI,UAAWiE,EAAa,SACzB,wBAKP,MAIR,C,gEClHA,KAAe1D,EAAAA,EAAAA,oBA3BM,SAACC,GACpB,IAAQuC,EAAsBvC,EAAtBuC,QAAShD,EAAaS,EAAbT,SACjB,OACE,iBAAKH,UAAU,mEAAkE,WAC/E,gBACE8E,IAAI,oBACJ5E,IAAI,KACJF,UAAU,kFAEZ,iBAAKA,UAAU,+EAA8E,WAC3F,gBACEC,OAAO,oBACPC,IAAI,MACJF,UAAU,yBAEZ,iBAAMA,UAAU,yBAAwB,SAAC,oBAE3C,iBAAKA,UAAU,qGAAoG,WACjH,eAAIA,UAAU,uFAAsF,SACjGmD,IAEFhD,OAIT,GAE+C,CAC7Ce,kBAAmBC,EAAAA,G","sources":["components/ButtonGoogle/ButtonGoogle.tsx","components/Button/Button.tsx","components/Input/Input.tsx","components/Label/Label.tsx","components/common/ErrorComponent/ErrorComponent.tsx","components/common/FormGroup/FormGroup.tsx","components/icons/IconEyeToggle.tsx","hooks/useToggle.tsx","components/CheckBox/CheckBox.tsx","pages/Register/Register.tsx","templates/FormTemplate/FormTemplate.tsx"],"sourcesContent":["import React from \"react\";\r\ntype Props = {\r\n  text: string;\r\n  onClick?: any;\r\n};\r\n\r\nconst ButtonGoogle = ({\r\n  text = \"Sign up with google\",\r\n  onClick = () => {},\r\n}: Props) => {\r\n  return (\r\n    <button\r\n      className=\"flex items-center justify-center gap-x-3 w-full py-3 border border-strock rounded-xl text-text2 dark:text-white text-base font-semibold mb-5 \"\r\n      onClick={onClick}\r\n    >\r\n      <img srcSet=\"./img/google.png 2x\" alt=\"...\" />\r\n      <span>{text}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonGoogle;\r\n","import { type } from \"os\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype Props = {\r\n  children: JSX.Element | React.ReactNode;\r\n  type: string | any;\r\n  className?: string;\r\n  isLoading?: boolean;\r\n  href?: string;\r\n  kind?: string;\r\n  onClick?: any;\r\n};\r\n\r\nconst Button = ({\r\n  children,\r\n  onClick,\r\n  className = \"\",\r\n  isLoading = false,\r\n  ...rest\r\n}: Props) => {\r\n  const child = !!isLoading ? (\r\n    <div className=\"w-8 h-8 rounded-full border-4 border-white border-t-transparent border-b-transparent animate-spin\"></div>\r\n  ) : (\r\n    children\r\n  );\r\n\r\n  let defaultClassName =\r\n    \"text-base font-semibold rounded-xl flex items-center justify-center\";\r\n\r\n  switch (rest.kind) {\r\n    case \"primary\":\r\n      defaultClassName =\r\n        defaultClassName +\r\n        \" bg-gradient-to-r from-[#00a7b4] to-[#a4d96c] text-white p-4 min-h-[56px]\";\r\n      break;\r\n\r\n    case \"secondary\":\r\n      defaultClassName =\r\n        defaultClassName +\r\n        \" bg-secondary bg-opacity-20 text-secondary p-4 min-h-[56px]\";\r\n      break;\r\n\r\n    case \"cancel\":\r\n      defaultClassName =\r\n        defaultClassName +\r\n        \" bg-stock hover:bg-gray-100 transition-all text-text3 text-base font-medium font-mono px-4 py-2 rounded-lg\";\r\n      break;\r\n\r\n    case \"success\":\r\n      defaultClassName =\r\n        defaultClassName +\r\n        \" bg-blue-500 hover:bg-opacity-80  text-white px-4 py-2 font-mono\";\r\n      break;\r\n\r\n    case \"delete\":\r\n      defaultClassName =\r\n        defaultClassName +\r\n        \" bg-red-500 hover:bg-opacity-80 text-white px-4 py-2 font-mono\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  if (rest.href)\r\n    return (\r\n      <Link to={rest.href} className={defaultClassName + \" \" + className}>\r\n        {children}\r\n      </Link>\r\n    );\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={`cursor-pointer ${\r\n        defaultClassName +\r\n        \" \" +\r\n        (!!isLoading ? \"opacity-50 pointer-events-none\" : \"\")\r\n      } ${className}`}\r\n      {...rest}\r\n    >\r\n      {child}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { useField } from \"formik\";\r\nimport { withErrorBoundary } from \"react-error-boundary\";\r\nimport ErrorComponent from \"../common/ErrorComponent/ErrorComponent\";\r\nimport { propsInput } from \"../../types/global\";\r\n\r\nconst Input = ({\r\n  children,\r\n  className = \"bg-bgInput\",\r\n  ...props\r\n}: propsInput) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div className=\"relative \">\r\n      <input\r\n        className={`w-full px-6 py-4 border  rounded-xl text-sm font-medium placeholder:text-text4 dark:placeholder:text-text-2 ${className} ${\r\n          meta.touched && meta.error\r\n            ? \"border-error text-error\"\r\n            : \"border-strock text-text1 dark:border-darkStoke\"\r\n        } ${children ? \"pr-14\" : \"\"}`}\r\n        {...props}\r\n        {...field}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <span className=\"absolute bottom-0 left-1 translate-y-6 text-sm text-error font-medium pointer-events-none error-input\">\r\n          {meta.error}\r\n        </span>\r\n      ) : null}\r\n      {children && (\r\n        <span className=\" absolute right-6 top-2/4 -translate-y-2/4 cursor-pointer select-none\">\r\n          {children}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withErrorBoundary(Input, {\r\n  FallbackComponent: ErrorComponent,\r\n});\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  children: JSX.Element | React.ReactNode;\r\n  htmlFor?: string;\r\n  onClick?: any;\r\n};\r\n\r\nconst Label = (props: Props) => {\r\n  const { children, htmlFor = \"\", onClick } = props;\r\n  return (\r\n    <label\r\n      onClick={onClick}\r\n      htmlFor={htmlFor}\r\n      className=\"text-sm text-left font-medium  text-text2 dark:text-text3 cursor-pointer inline-block mt-5\"\r\n    >\r\n      {children}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\n\r\ntype Props = {};\r\n\r\nconst ErrorComponent = (props: Props) => {\r\n  return (\r\n    <div className=\"text-red-500 bg-red-100 p-5 rounded-lg\">\r\n      Look like component is error\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorComponent;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  children: JSX.Element | React.ReactNode;\r\n};\r\n\r\nconst FormGroup = ({ children }: Props) => {\r\n  return (\r\n    <div className=\"flex flex-col gap-y-2 lg:gap-y-3 mb-4 lg:mb-5\">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormGroup;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  open: boolean;\r\n  onClick: any;\r\n};\r\n\r\nconst IconEyeToggle = ({ open = false, onClick = () => void {} }: Props) => {\r\n  if (open)\r\n    return (\r\n      <span>\r\n        <svg\r\n          width={24}\r\n          height={24}\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          onClick={onClick}\r\n        >\r\n          <path\r\n            d=\"M3 12C3 12 6.27273 5 12 5C17.7273 5 21 12 21 12C21 12 17.7273 19 12 19C6.27273 19 3 12 3 12Z\"\r\n            stroke=\"#A2A2A8\"\r\n            strokeWidth={2}\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M12 14C13.1046 14 14 13.1046 14 12C14 10.8954 13.1046 10 12 10C10.8954 10 10 10.8954 10 12C10 13.1046 10.8954 14 12 14Z\"\r\n            stroke=\"#A2A2A8\"\r\n            strokeWidth={2}\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n        </svg>\r\n      </span>\r\n    );\r\n  return (\r\n    <span>\r\n      <svg\r\n        width={24}\r\n        height={24}\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        onClick={onClick}\r\n      >\r\n        <path\r\n          d=\"M13.7345 13.855C13.5098 14.1129 13.2388 14.3198 12.9378 14.4632C12.6367 14.6067 12.3116 14.6839 11.9821 14.6901C11.6525 14.6963 11.3251 14.6315 11.0195 14.4994C10.7139 14.3674 10.4362 14.1709 10.2031 13.9216C9.97007 13.6724 9.78632 13.3755 9.66287 13.0486C9.53942 12.7217 9.47879 12.3716 9.48461 12.0192C9.49042 11.6667 9.56256 11.3191 9.69672 10.9971C9.83087 10.6751 10.0243 10.3853 10.2655 10.145M16.86 17.1975C15.4614 18.3376 13.7584 18.9693 12 19C6.27273 19 3 12 3 12C4.01773 9.97167 5.42929 8.19955 7.14 6.80252L16.86 17.1975ZM10.2818 5.21002C10.845 5.06904 11.4216 4.99857 12 5.00002C17.7273 5.00002 21 12 21 12C20.5033 12.9937 19.911 13.9292 19.2327 14.7913L10.2818 5.21002Z\"\r\n          stroke=\"#A2A2A8\"\r\n          strokeWidth={2}\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M3 2.5L21 21\"\r\n          stroke=\"#A2A2A8\"\r\n          strokeWidth={2}\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n      </svg>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default IconEyeToggle;\r\n","import { useState } from \"react\";\r\n\r\nexport default function useToggle(initialValue = false) {\r\n  const [value, setValue] = useState(initialValue);\r\n  const handleToggleValue = () => {\r\n    setValue(!value);\r\n  };\r\n  return {\r\n    value,\r\n    handleToggleValue,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { withErrorBoundary } from \"react-error-boundary\";\r\nimport ErrorComponent from \"../common/ErrorComponent/ErrorComponent\";\r\ntype Props = {\r\n  name: string;\r\n  checked: boolean;\r\n  onClick: any;\r\n  children?: JSX.Element | React.ReactNode;\r\n};\r\n\r\nconst CheckBox = ({ checked, name, onClick = () => {}, children }: Props) => {\r\n  return (\r\n    <div className=\"flex items-start gap-x-5 my-8\">\r\n      <div\r\n        className={` w-5 h-5 border  rounded cursor-pointer inline-flex justify-center items-center p-1 text-white ${\r\n          checked\r\n            ? \"bg-primary border-primary\"\r\n            : \"border-strockPhe dark:border-text3\"\r\n        }`}\r\n        onClick={onClick}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"hidden\"\r\n          name={name}\r\n          onChange={onClick}\r\n        />\r\n        <span className={`select-none ${checked ? \"\" : \"opacity-0 invisible\"}`}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n            className=\"w-5 h-5\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z\"\r\n              clipRule=\"evenodd\"\r\n            />\r\n          </svg>\r\n        </span>\r\n      </div>\r\n      {children && <label className=\"font-medium text-text3\">{children}</label>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withErrorBoundary(CheckBox, {\r\n  FallbackComponent: ErrorComponent,\r\n});\r\n","import useToggle from \"../../hooks/useToggle\";\r\nimport Label from \"../../components/Label/Label\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport IconEyeToggle from \"../../components/icons/IconEyeToggle\";\r\nimport FormTemplate from \"../../templates/FormTemplate/FormTemplate\";\r\nimport FormGroup from \"../../components/common/FormGroup/FormGroup\";\r\nimport CheckBox from \"../../components/CheckBox/CheckBox\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport * as Yup from \"yup\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport ButtonGoogle from \"../../components/ButtonGoogle/ButtonGoogle\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { DispathType } from \"../../redux/config\";\r\nimport { registerApi } from \"../../redux/userReducer/userReducer\";\r\nimport { userType } from \"../../types/global\";\r\n\r\ntype Props = {};\r\n\r\nconst Register = (props: Props) => {\r\n  const dispath: DispathType = useDispatch();\r\n\r\n  const phoneRegExp =\r\n    /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n  const initialValues: userType = {\r\n    email: \"\",\r\n    passWord: \"\",\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n  };\r\n  const { value: acceptTerm, handleToggleValue: handleToggleTerm } =\r\n    useToggle();\r\n  const { value: showPassword, handleToggleValue: handleTogglePassword } =\r\n    useToggle();\r\n\r\n  return (\r\n    <FormTemplate heading=\"Sing Up\">\r\n      <p className=\"mb-6 font-normal text-center lg:text-sm text-text3 lg:mb-8\">\r\n        Already have an account?{\" \"}\r\n        <Link to={\"/login\"} className=\"font-medium underline text-primary\">\r\n          Sign in\r\n        </Link>\r\n      </p>\r\n      <ButtonGoogle text=\"Sign up with google\" />\r\n      <p className=\"mb-4 text-xs font-normal text-center lg:text-sm lg:mb-8 text-text2 dark:text-white dark:border-text3\">\r\n        Or sign up with email\r\n      </p>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={Yup.object().shape({\r\n          name: Yup.string().required(\"name cannot be blank !\"),\r\n          email: Yup.string()\r\n            .required(\"email cannot be blank !\")\r\n            .email(\"Invalid email address\"),\r\n          phoneNumber: Yup.string()\r\n            .required(\"phone number cannot be blank !\")\r\n            .matches(phoneRegExp, \"Phone number is not valid\"),\r\n\r\n          passWord: Yup.string()\r\n            .required(\"pasword cannot be blank !\")\r\n            .min(8, \"Password must be 8 character \"),\r\n        })}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          if (acceptTerm) {\r\n            setTimeout(() => {\r\n              setSubmitting(false);\r\n              const actionAsync = registerApi(values);\r\n              dispath(actionAsync);\r\n            }, 300);\r\n          }\r\n        }}\r\n      >\r\n        {({ isSubmitting, errors }) => {\r\n          return (\r\n            <Form>\r\n              <FormGroup>\r\n                <Label htmlFor=\"name\">Name *</Label>\r\n                <Input\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Please enter your name ...\"\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label htmlFor=\"email\">Email *</Label>\r\n                <Input\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Please enter your email ...\"\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label htmlFor=\"phoneNumber\">Phone *</Label>\r\n                <Input\r\n                  id=\"phoneNumber\"\r\n                  name=\"phoneNumber\"\r\n                  type=\"text\"\r\n                  placeholder=\"Please enter your phone ...\"\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label htmlFor=\"passWord\">Password *</Label>\r\n                <Input\r\n                  id=\"passWord\"\r\n                  name=\"passWord\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  placeholder=\"Please enter your password ...\"\r\n                >\r\n                  <IconEyeToggle\r\n                    open={showPassword}\r\n                    onClick={handleTogglePassword}\r\n                  />\r\n                </Input>\r\n              </FormGroup>\r\n\r\n              <CheckBox\r\n                name=\"term\"\r\n                checked={acceptTerm}\r\n                onClick={handleToggleTerm}\r\n              >\r\n                <p className=\"flex-1 text-xs lg:text-sm text-text2 dark:text-text3\">\r\n                  I agree to the{\" \"}\r\n                  <span className=\"underline text-secondary\">Terms of Use</span>{\" \"}\r\n                  and have read and understand the{\" \"}\r\n                  <span className=\"underline text-secondary\">\r\n                    Privacy policy\r\n                  </span>\r\n                  .\r\n                </p>\r\n              </CheckBox>\r\n\r\n              <Button\r\n                kind=\"primary\"\r\n                type=\"submit\"\r\n                className=\"w-full text-white bg-primary\"\r\n                isLoading={isSubmitting}\r\n              >\r\n                Create my account\r\n              </Button>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </FormTemplate>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withErrorBoundary } from \"react-error-boundary\";\r\nimport ErrorComponent from \"../../components/common/ErrorComponent/ErrorComponent\";\r\ntype Props = {\r\n  heading: string;\r\n  children: JSX.Element | React.ReactNode;\r\n};\r\n\r\nconst FormTemplate = (props: Props) => {\r\n  const { heading, children } = props;\r\n  return (\r\n    <div className=\"relative w-full min-h-screen p-10 bg-lite dark:bg-darkbg isolate\">\r\n      <img\r\n        src=\"./img/ellipse.png\"\r\n        alt=\"bg\"\r\n        className=\"hidden lg:block absolute bottom-0 right-0 left-0 pointer-events-none z-[-1] \"\r\n      />\r\n      <div className=\"flex items-center justify-centerp-5 gap-x-5 text-2xl text-primary font-bold \">\r\n        <img\r\n          srcSet=\"./img/logo.png 2x\"\r\n          alt=\"...\"\r\n          className=\"w-full max-w-[70px]\"\r\n        />\r\n        <span className=\"hidden lg:inline-block\">Monkey Jira</span>\r\n      </div>\r\n      <div className=\"w-full max-w-[556px] bg-white dark:bg-darkSecondary rounded-xl px-5 py-8 lg:px-16 lg:py-12 mx-auto\">\r\n        <h1 className=\"mb-1 text-lg font-semibold text-center lg:text-xl lg:mb-3 text-text1 dark:text-white\">\r\n          {heading}\r\n        </h1>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withErrorBoundary(FormTemplate, {\r\n  FallbackComponent: ErrorComponent,\r\n});\r\n"],"names":["text","onClick","className","srcSet","alt","children","isLoading","rest","child","defaultClassName","kind","href","to","withErrorBoundary","props","useField","field","meta","touched","error","FallbackComponent","ErrorComponent","htmlFor","open","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","useToggle","initialValue","useState","value","setValue","handleToggleValue","checked","name","type","onChange","fillRule","clipRule","dispath","useDispatch","acceptTerm","handleToggleTerm","showPassword","handleTogglePassword","FormTemplate","heading","ButtonGoogle","initialValues","email","passWord","phoneNumber","validationSchema","Yup","shape","required","matches","min","onSubmit","values","setSubmitting","setTimeout","actionAsync","registerApi","isSubmitting","errors","FormGroup","Label","Input","id","placeholder","IconEyeToggle","Button","src"],"sourceRoot":""}