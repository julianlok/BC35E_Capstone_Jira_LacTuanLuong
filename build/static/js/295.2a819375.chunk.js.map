{"version":3,"file":"static/js/295.2a819375.chunk.js","mappings":"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","sources":["components/Button/Button.tsx","components/HeaderSearch/HeaderSearch.tsx","components/Input/Input.tsx","components/Label/Label.tsx","components/Portal/Portal.tsx","components/Modal/ModalBase.tsx","components/common/ErrorComponent/ErrorComponent.tsx","components/common/FormGroup/FormGroup.tsx","components/icons/IconDelete.tsx","components/icons/IconEdit.tsx","components/icons/IconError.tsx","components/icons/IconEyeToggle.tsx","hooks/useToggle.tsx","pages/Users/Users.tsx"],"sourcesContent":["import { type } from \"os\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype Props = {\r\n  children: JSX.Element | React.ReactNode;\r\n  type: string | any;\r\n  className?: string;\r\n  isLoading?: boolean;\r\n  href?: string;\r\n  kind?: string;\r\n  onClick?: any;\r\n};\r\n\r\nconst Button = ({\r\n  children,\r\n  onClick,\r\n  className = \"\",\r\n  isLoading = false,\r\n  ...rest\r\n}: Props) => {\r\n  const child = !!isLoading ? (\r\n    <div className=\"w-8 h-8 rounded-full border-4 border-white border-t-transparent border-b-transparent animate-spin\"></div>\r\n  ) : (\r\n    children\r\n  );\r\n\r\n  let defaultClassName =\r\n    \"text-base font-semibold rounded-xl flex items-center justify-center\";\r\n\r\n  switch (rest.kind) {\r\n    case \"primary\":\r\n      defaultClassName =\r\n        defaultClassName +\r\n        \" bg-gradient-to-r from-[#00a7b4] to-[#a4d96c] text-white p-4 min-h-[56px]\";\r\n      break;\r\n\r\n    case \"secondary\":\r\n      defaultClassName =\r\n        defaultClassName +\r\n        \" bg-secondary bg-opacity-20 text-secondary p-4 min-h-[56px]\";\r\n      break;\r\n\r\n    case \"cancel\":\r\n      defaultClassName =\r\n        defaultClassName +\r\n        \" bg-stock hover:bg-gray-100 transition-all text-text3 text-base font-medium font-mono px-4 py-2 rounded-lg\";\r\n      break;\r\n\r\n    case \"success\":\r\n      defaultClassName =\r\n        defaultClassName +\r\n        \" bg-blue-500 hover:bg-opacity-80  text-white px-4 py-2 font-mono\";\r\n      break;\r\n\r\n    case \"delete\":\r\n      defaultClassName =\r\n        defaultClassName +\r\n        \" bg-red-500 hover:bg-opacity-80 text-white px-4 py-2 font-mono\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  if (rest.href)\r\n    return (\r\n      <Link to={rest.href} className={defaultClassName + \" \" + className}>\r\n        {children}\r\n      </Link>\r\n    );\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={`cursor-pointer ${\r\n        defaultClassName +\r\n        \" \" +\r\n        (!!isLoading ? \"opacity-50 pointer-events-none\" : \"\")\r\n      } ${className}`}\r\n      {...rest}\r\n    >\r\n      {child}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  onChange?: any;\r\n};\r\n\r\nconst HeaderSearch = ({ onChange }: Props) => {\r\n  return (\r\n    <div className=\"bg-gray-100 rounded-full shadow-[10px_10px_20px_rgba(218,_213,_213,_0.15)] p-2 w-full  flex items-center\">\r\n      <div className=\"flex-1 px-5\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          className=\"bg-transparent w-full text-sm text-text1 placeholder:text-text4 \"\r\n        />\r\n      </div>\r\n      <div className=\"w-[72px] rounded-full bg-secondary bg-opacity-20 text-secondary h-10 flex items-center justify-center flex-shrink-0\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          strokeWidth=\"1.5\"\r\n          stroke=\"currentColor\"\r\n          className=\"w-6 h-6\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            d=\"M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z\"\r\n          />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderSearch;\r\n","import React from \"react\";\r\nimport { useField } from \"formik\";\r\nimport { withErrorBoundary } from \"react-error-boundary\";\r\nimport ErrorComponent from \"../common/ErrorComponent/ErrorComponent\";\r\nimport { propsInput } from \"../../types/global\";\r\n\r\nconst Input = ({\r\n  children,\r\n  className = \"bg-bgInput\",\r\n  ...props\r\n}: propsInput) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div className=\"relative \">\r\n      <input\r\n        className={`w-full px-6 py-4 border  rounded-xl text-sm font-medium placeholder:text-text4 dark:placeholder:text-text-2 ${className} ${\r\n          meta.touched && meta.error\r\n            ? \"border-error text-error\"\r\n            : \"border-strock text-text1 dark:border-darkStoke\"\r\n        } ${children ? \"pr-14\" : \"\"}`}\r\n        {...props}\r\n        {...field}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <span className=\"absolute bottom-0 left-1 translate-y-6 text-sm text-error font-medium pointer-events-none error-input\">\r\n          {meta.error}\r\n        </span>\r\n      ) : null}\r\n      {children && (\r\n        <span className=\" absolute right-6 top-2/4 -translate-y-2/4 cursor-pointer select-none\">\r\n          {children}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withErrorBoundary(Input, {\r\n  FallbackComponent: ErrorComponent,\r\n});\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  children: JSX.Element | React.ReactNode;\r\n  htmlFor?: string;\r\n  onClick?: any;\r\n};\r\n\r\nconst Label = (props: Props) => {\r\n  const { children, htmlFor = \"\", onClick } = props;\r\n  return (\r\n    <label\r\n      onClick={onClick}\r\n      htmlFor={htmlFor}\r\n      className=\"text-sm text-left font-medium  text-text2 dark:text-text3 cursor-pointer inline-block mt-5\"\r\n    >\r\n      {children}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import React, { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { portalType } from \"../../types/global\";\r\n\r\nfunction createPortalWrapper() {\r\n  const element = document.createElement(\"div\");\r\n  element.id = \"portal-wrapper\";\r\n  return element;\r\n}\r\n\r\nconst portalWrapperElm = createPortalWrapper();\r\n\r\nconst Portal = ({\r\n  containerClassName = \"\",\r\n  bodyClassName = \"\",\r\n  containerStyle = {},\r\n  bodyStyle = {},\r\n  onClose,\r\n  visible = false,\r\n  children,\r\n}: portalType) => {\r\n  useEffect(() => {\r\n    document.body.appendChild(portalWrapperElm);\r\n  }, []);\r\n\r\n  const renderContent = (\r\n    <div\r\n      className={`fixed inset-0 z-[99]  ${\r\n        visible ? \"\" : \"opacity-0 invisible\"\r\n      } ${containerClassName}`}\r\n      style={containerStyle}\r\n    >\r\n      <div\r\n        className=\"overlay absolute inset-0 bg-black bg-opacity-30 \"\r\n        onClick={onClose}\r\n      ></div>\r\n      <div\r\n        className={`content relative z-10 ${bodyClassName}`}\r\n        style={bodyStyle}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n  return createPortal(renderContent, portalWrapperElm);\r\n};\r\n\r\nexport default Portal;\r\n","import React from \"react\";\r\nimport { portalType } from \"../../types/global\";\r\nimport Portal from \"../Portal/Portal\";\r\n\r\nconst ModalBase = ({ visible, children, onClose }: portalType) => {\r\n  return (\r\n    <>\r\n      <Portal\r\n        visible={visible}\r\n        onClose={onClose}\r\n        containerClassName=\"flex items-center justify-center\"\r\n      >\r\n        {children}\r\n      </Portal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalBase;\r\n","import React from \"react\";\r\n\r\ntype Props = {};\r\n\r\nconst ErrorComponent = (props: Props) => {\r\n  return (\r\n    <div className=\"text-red-500 bg-red-100 p-5 rounded-lg\">\r\n      Look like component is error\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorComponent;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  children: JSX.Element | React.ReactNode;\r\n};\r\n\r\nconst FormGroup = ({ children }: Props) => {\r\n  return (\r\n    <div className=\"flex flex-col gap-y-2 lg:gap-y-3 mb-4 lg:mb-5\">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormGroup;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  onClick?: any;\r\n};\r\n\r\nconst IconDelete = ({ onClick = () => {} }: Props) => {\r\n  return (\r\n    <span\r\n      className=\"flex items-center justify-center w-10 h-10 borderborder-transparent rounded cursor-pointer text-error hover:bg-error hover:bg-opacity-20 transition-all ease-linear\"\r\n      onClick={onClick}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"w-5 h-5\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n        />\r\n      </svg>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default IconDelete;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  onClick?: any;\r\n};\r\n\r\nconst IconEdit = ({ onClick = () => {} }: Props) => {\r\n  return (\r\n    <span\r\n      className=\"flex items-center justify-center w-10 h-10 border border-transparent text-blue-600 hover:bg-blue-200 transition-all ease-linear rounded cursor-pointer select-none\"\r\n      onClick={onClick()}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"w-5 h-5\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\r\n        />\r\n      </svg>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default IconEdit;\r\n","import React from \"react\";\r\n\r\nconst IconError = () => {\r\n  return (\r\n    <span className=\"text-red-500\">\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"currentColor\"\r\n        className=\"w-6 h-6\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z\"\r\n          clipRule=\"evenodd\"\r\n        />\r\n      </svg>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default IconError;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  open: boolean;\r\n  onClick: any;\r\n};\r\n\r\nconst IconEyeToggle = ({ open = false, onClick = () => void {} }: Props) => {\r\n  if (open)\r\n    return (\r\n      <span>\r\n        <svg\r\n          width={24}\r\n          height={24}\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          onClick={onClick}\r\n        >\r\n          <path\r\n            d=\"M3 12C3 12 6.27273 5 12 5C17.7273 5 21 12 21 12C21 12 17.7273 19 12 19C6.27273 19 3 12 3 12Z\"\r\n            stroke=\"#A2A2A8\"\r\n            strokeWidth={2}\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M12 14C13.1046 14 14 13.1046 14 12C14 10.8954 13.1046 10 12 10C10.8954 10 10 10.8954 10 12C10 13.1046 10.8954 14 12 14Z\"\r\n            stroke=\"#A2A2A8\"\r\n            strokeWidth={2}\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n        </svg>\r\n      </span>\r\n    );\r\n  return (\r\n    <span>\r\n      <svg\r\n        width={24}\r\n        height={24}\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        onClick={onClick}\r\n      >\r\n        <path\r\n          d=\"M13.7345 13.855C13.5098 14.1129 13.2388 14.3198 12.9378 14.4632C12.6367 14.6067 12.3116 14.6839 11.9821 14.6901C11.6525 14.6963 11.3251 14.6315 11.0195 14.4994C10.7139 14.3674 10.4362 14.1709 10.2031 13.9216C9.97007 13.6724 9.78632 13.3755 9.66287 13.0486C9.53942 12.7217 9.47879 12.3716 9.48461 12.0192C9.49042 11.6667 9.56256 11.3191 9.69672 10.9971C9.83087 10.6751 10.0243 10.3853 10.2655 10.145M16.86 17.1975C15.4614 18.3376 13.7584 18.9693 12 19C6.27273 19 3 12 3 12C4.01773 9.97167 5.42929 8.19955 7.14 6.80252L16.86 17.1975ZM10.2818 5.21002C10.845 5.06904 11.4216 4.99857 12 5.00002C17.7273 5.00002 21 12 21 12C20.5033 12.9937 19.911 13.9292 19.2327 14.7913L10.2818 5.21002Z\"\r\n          stroke=\"#A2A2A8\"\r\n          strokeWidth={2}\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M3 2.5L21 21\"\r\n          stroke=\"#A2A2A8\"\r\n          strokeWidth={2}\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n      </svg>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default IconEyeToggle;\r\n","import { useState } from \"react\";\r\n\r\nexport default function useToggle(initialValue = false) {\r\n  const [value, setValue] = useState(initialValue);\r\n  const handleToggleValue = () => {\r\n    setValue(!value);\r\n  };\r\n  return {\r\n    value,\r\n    handleToggleValue,\r\n  };\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport IconDelete from \"../../components/icons/IconDelete\";\r\nimport IconEdit from \"../../components/icons/IconEdit\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderSearch from \"../../components/HeaderSearch/HeaderSearch\";\r\nimport { useToast } from \"../../components/Toast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { DispathType, RootState } from \"../../redux/config\";\r\nimport {\r\n  deleteUser,\r\n  getUserApi,\r\n  updateUserApi,\r\n} from \"../../redux/userReducer/userReducer\";\r\nimport { UserModel, UserUpdateType } from \"../../types/global\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport IconError from \"../../components/icons/IconError\";\r\nimport ModalBase from \"../../components/Modal/ModalBase\";\r\nimport FormGroup from \"../../components/common/FormGroup/FormGroup\";\r\nimport Label from \"../../components/Label/Label\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport IconEyeToggle from \"../../components/icons/IconEyeToggle\";\r\nimport useToggle from \"../../hooks/useToggle\";\r\nimport { Pagination } from \"antd\";\r\ntype Props = {};\r\n\r\nconst Users = (props: Props) => {\r\n  const phoneRegExp =\r\n    /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n  const { value: showPassword, handleToggleValue: handleTogglePassword } =\r\n    useToggle();\r\n  const dispatch: DispathType = useDispatch();\r\n  const { add } = useToast();\r\n  const [search, setSearch] = useState<string>(\"\");\r\n  const searchFilter = (data: UserModel[]) => {\r\n    return data?.filter((item) => item.name?.toLowerCase().includes(search));\r\n  };\r\n  const { userAll } = useSelector((state: RootState) => state.userReducer);\r\n\r\n  const [openModalDeleteUser, setOpenModalDeleteUser] =\r\n    useState<boolean>(false);\r\n\r\n  const [openModalUpdateUser, setOpenModalUpdateUser] =\r\n    useState<boolean>(false);\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [userList, setUserList] = useState<UserModel[]>([]);\r\n\r\n  const handleDeleteUser = (id: number) => {\r\n    setIsLoading(true);\r\n    setOpenModalDeleteUser(true);\r\n    setUserList(userAll.filter((u) => u.userId === id));\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleUpdateUser = (id: number) => {\r\n    setIsLoading(true);\r\n    setOpenModalUpdateUser(true);\r\n    setUserList(userAll.filter((u) => u.userId === id));\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserApi());\r\n  }, []);\r\n\r\n  // phân trang\r\n  const [current, setCurrent] = useState(1);\r\n  const [listUser, setListUser] = useState<UserModel[]>([]);\r\n  useEffect(() => {\r\n    setListUser(userAll ? userAll?.slice(0, 6) : []);\r\n  }, [userAll]);\r\n\r\n  const onChange = (page: number) => {\r\n    setCurrent(page);\r\n\r\n    setListUser(userAll?.slice((page - 1) * 6, (page - 1) * 6 + 6));\r\n  };\r\n  return (\r\n    <>\r\n      {/* Modal delete user */}\r\n      {openModalDeleteUser && (\r\n        <ModalBase\r\n          visible={openModalDeleteUser}\r\n          onClose={() => {\r\n            setOpenModalDeleteUser(false);\r\n          }}\r\n        >\r\n          {isLoading ? (\r\n            <div className=\"w-8 h-8 rounded-full border-4 border-blue-300 border-t-transparent animate-spin\"></div>\r\n          ) : (\r\n            <>\r\n              {userList.map(({ name, userId }) => {\r\n                return (\r\n                  <div\r\n                    key={userId}\r\n                    className=\"relative bg-white max-w-[500px] w-[400px] max-h-[350px]  overflow-hidden rounded-lg shadow-sdSecondary\"\r\n                  >\r\n                    <div className=\"flex gap-x-2 p-6\">\r\n                      <IconError />\r\n                      <div className=\"flex-1\">\r\n                        <h3 className=\"text-xl font-mono font-semibold\">\r\n                          Delete {name}?\r\n                        </h3>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-sm text-text2 leading-6 px-6\">\r\n                      <p className=\"mb-3\">\r\n                        You're about to permanently delete this user, its\r\n                        comments and attachments, and all of its data.\r\n                      </p>\r\n                      <p>\r\n                        If you're not sure, you can resolve or close this issue\r\n                        instead.\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"flex items-start justify-end gap-x-3 px-6 py-5\">\r\n                      <Button\r\n                        kind=\"cancel\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          setOpenModalDeleteUser(false);\r\n                        }}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                      <Button\r\n                        kind=\"delete\"\r\n                        type=\"button\"\r\n                        onClick={async () => {\r\n                          setIsLoading(true);\r\n                          await dispatch(deleteUser(userId));\r\n                          await dispatch(getUserApi());\r\n                          setIsLoading(false);\r\n                          setOpenModalDeleteUser(false);\r\n\r\n                          add({\r\n                            type: \"success\",\r\n                            message: `Delete ${name} successfully`,\r\n                            duration: 3000,\r\n                            position: \"topRight\",\r\n                          });\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </>\r\n          )}\r\n        </ModalBase>\r\n      )}\r\n\r\n      {/* Modal update user */}\r\n      {openModalUpdateUser &&\r\n        userList.map(({ avatar, name, userId, email, phoneNumber }) => {\r\n          const initialValues: UserUpdateType = {\r\n            id: userId,\r\n            email,\r\n            name,\r\n            phoneNumber,\r\n            passWord: \"\",\r\n            confirmPassWord: \"\",\r\n          };\r\n          return (\r\n            <ModalBase\r\n              key={userId}\r\n              visible={openModalUpdateUser}\r\n              onClose={() => {\r\n                setOpenModalUpdateUser(false);\r\n              }}\r\n            >\r\n              {isLoading ? (\r\n                <div className=\"w-8 h-8 rounded-full border-4 border-blue-300 border-t-transparent animate-spin\"></div>\r\n              ) : (\r\n                <Formik\r\n                  initialValues={initialValues}\r\n                  validationSchema={Yup.object().shape({\r\n                    name: Yup.string().required(\"name cannot be blank !\"),\r\n                    email: Yup.string()\r\n                      .required(\"email cannot be blank !\")\r\n                      .email(\"email is invalid !\"),\r\n                    phoneNumber: Yup.string()\r\n                      .required(\"phone number cannot be blank !\")\r\n                      .matches(phoneRegExp, \"Phone number is not valid\"),\r\n                    passWord: Yup.string()\r\n                      .required(\"pasword cannot be blank !\")\r\n                      .min(8, \"Password must be 8 character \"),\r\n                    confirmPassWord: Yup.string()\r\n                      .required(\"password confirm cannot be blank !\")\r\n                      .oneOf(\r\n                        [Yup.ref(\"passWord\"), null],\r\n                        \"Both password need to be the same\"\r\n                      ),\r\n                  })}\r\n                  onSubmit={async (\r\n                    { id, passWord, email, name, phoneNumber },\r\n                    { setSubmitting }\r\n                  ) => {\r\n                    setTimeout(async () => {\r\n                      setSubmitting(true);\r\n                      await dispatch(\r\n                        updateUserApi({\r\n                          id,\r\n                          passWord,\r\n                          email,\r\n                          name,\r\n                          phoneNumber,\r\n                        })\r\n                      );\r\n                      await dispatch(getUserApi());\r\n\r\n                      setOpenModalUpdateUser(false);\r\n                      add({\r\n                        type: \"success\",\r\n                        message: \"Update user successfully\",\r\n                        duration: 3000,\r\n                        position: \"topCenter\",\r\n                      });\r\n                    });\r\n                  }}\r\n                >\r\n                  {({ isSubmitting, errors, setFieldValue }) => {\r\n                    return (\r\n                      <Form>\r\n                        <div className=\"relative bg-white min-w-[750px] max-h-[650px] overflow-x-hidden overflow-y-auto rounded-lg shadow-sdSecondary scrollbar-none\">\r\n                          <div className=\"flex items-start justify-between mx-5 mt-5\">\r\n                            <div className=\" flex items-center gap-x-3\">\r\n                              <div className=\"text-text2 font-medium\">ID :</div>\r\n                              <span className=\"flex items-center justify-center min-w-[45px] h-[45px] rounded-lg shadow-sdThirty text-text2 font-semibold select-none\">\r\n                                {userId}\r\n                              </span>\r\n                            </div>\r\n                            <span\r\n                              className=\"text-text2 hover:text-error select-none cursor-pointer\"\r\n                              onClick={() => {\r\n                                setOpenModalUpdateUser(false);\r\n                              }}\r\n                            >\r\n                              <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                fill=\"none\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                strokeWidth=\"1.5\"\r\n                                stroke=\"currentColor\"\r\n                                className=\"w-6 h-6\"\r\n                              >\r\n                                <path\r\n                                  strokeLinecap=\"round\"\r\n                                  strokeLinejoin=\"round\"\r\n                                  d=\"M6 18L18 6M6 6l12 12\"\r\n                                />\r\n                              </svg>\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"bg-white rounded-xl py-10 px-[66px]\">\r\n                            <div className=\"text-center\">\r\n                              <h1 className=\"py-4 px-14  bg-text4 bg-opacity-5 rounded-xl font-bold text-[25px] inline-block\">\r\n                                Edit User 📝\r\n                              </h1>\r\n\r\n                              <FormGroup>\r\n                                <Label htmlFor=\"name\">Name</Label>\r\n                                <Input\r\n                                  id=\"name\"\r\n                                  name=\"name\"\r\n                                  type=\"text\"\r\n                                  placeholder={name}\r\n                                />\r\n                              </FormGroup>\r\n\r\n                              <FormGroup>\r\n                                <Label htmlFor=\"email\">Email</Label>\r\n                                <Input\r\n                                  id=\"email\"\r\n                                  name=\"email\"\r\n                                  type=\"text\"\r\n                                  placeholder={email}\r\n                                />\r\n                              </FormGroup>\r\n\r\n                              <FormGroup>\r\n                                <Label htmlFor=\"phoneNumber\">\r\n                                  Phone Number\r\n                                </Label>\r\n                                <Input\r\n                                  id=\"phoneNumber\"\r\n                                  name=\"phoneNumber\"\r\n                                  type=\"text\"\r\n                                  placeholder={phoneNumber}\r\n                                />\r\n                              </FormGroup>\r\n\r\n                              <FormGroup>\r\n                                <Label htmlFor=\"passWord\">Password</Label>\r\n                                <Input\r\n                                  id=\"passWord\"\r\n                                  name=\"passWord\"\r\n                                  type={showPassword ? \"text\" : \"password\"}\r\n                                  placeholder=\"Please enter your password ...\"\r\n                                >\r\n                                  <IconEyeToggle\r\n                                    open={showPassword}\r\n                                    onClick={handleTogglePassword}\r\n                                  />\r\n                                </Input>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup>\r\n                                <Label htmlFor=\"confirmPassWord\">\r\n                                  Password confirm\r\n                                </Label>\r\n                                <Input\r\n                                  id=\"confirmPassWord\"\r\n                                  name=\"confirmPassWord\"\r\n                                  type={showPassword ? \"text\" : \"password\"}\r\n                                  placeholder=\"Please confirm password ...\"\r\n                                />\r\n                              </FormGroup>\r\n\r\n                              <div className=\" flex items-center justify-center\">\r\n                                <Button\r\n                                  isLoading={isSubmitting}\r\n                                  type=\"submit\"\r\n                                  className=\" my-3\"\r\n                                  kind=\"success\"\r\n                                >\r\n                                  Submit\r\n                                </Button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Form>\r\n                    );\r\n                  }}\r\n                </Formik>\r\n              )}\r\n            </ModalBase>\r\n          );\r\n        })}\r\n      <div className=\"w-full overflow-x-auto\">\r\n        <div className=\"mb-2 bg-white rounded-3xl flex items-center justify-between py-8 px-10\">\r\n          <div className=\"w-2/12 hover:w-2/6 focus-within:w-2/6  transition-all ease-out\">\r\n            <HeaderSearch\r\n              onChange={(e: React.FormEvent<HTMLInputElement>) => {\r\n                setSearch(e.currentTarget.value);\r\n              }}\r\n            ></HeaderSearch>\r\n          </div>\r\n          <div className=\"flex items-start gap-x-6\">\r\n            <Link\r\n              to=\"/add-project\"\r\n              className=\"flex items-center justify-center rounded-full w-14 h-14 text-white bg-secondary bg-opacity-60 hover:bg-[#352A65] hover:-translate-y-1 transition-all ease-linear \"\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth=\"1.5\"\r\n                stroke=\"currentColor\"\r\n                className=\"w-6 h-6\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  d=\"M12 4.5v15m7.5-7.5h-15\"\r\n                />\r\n              </svg>\r\n            </Link>\r\n            <div className=\"flex-1\">\r\n              <h1 className=\"text-text1 font-semibold text-[22px] mb-2\">\r\n                Create Your Project\r\n              </h1>\r\n              <p className=\"text-text3 text-sm mb-2\">\r\n                Jump right into our editor and create your first project!\r\n              </p>\r\n              <Link to=\"#\" className=\"text-sm text-primary \">\r\n                Need any help? Learn More...\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {!!userAll ? (\r\n          <>\r\n            <table className=\"table-user\">\r\n              <thead>\r\n                <tr>\r\n                  <th>No.</th>\r\n                  <th>Name</th>\r\n                  <th>ID</th>\r\n                  <th>Email</th>\r\n                  <th>Phone Number</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {searchFilter(listUser).map(\r\n                  ({ userId, email, name, phoneNumber }, index) => {\r\n                    return (\r\n                      <tr key={userId}>\r\n                        <td>{index + 1}</td>\r\n                        <td className=\"truncate\">{name}</td>\r\n                        <td>{userId}</td>\r\n                        <td>{email}</td>\r\n                        <td>{phoneNumber}</td>\r\n                        <td>\r\n                          <div className=\"flex items-center text-gray-500 gap-x-3\">\r\n                            <span\r\n                              onClick={() => {\r\n                                handleUpdateUser(userId);\r\n                              }}\r\n                            >\r\n                              <IconEdit></IconEdit>\r\n                            </span>\r\n\r\n                            <span\r\n                              onClick={() => {\r\n                                handleDeleteUser(userId);\r\n                              }}\r\n                            >\r\n                              <IconDelete></IconDelete>\r\n                            </span>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  }\r\n                )}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"flex items-center justify-end my-5\">\r\n              <Pagination\r\n                hideOnSinglePage\r\n                defaultCurrent={1}\r\n                onChange={onChange}\r\n                current={current}\r\n                pageSize={6}\r\n                total={userAll.length}\r\n                className=\"pl-5 ml-5\"\r\n              />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"flex justify-center items-center bg-lite h-[400px]\">\r\n            <div className=\"loader bg-lite p-5 rounded-full flex space-x-3\">\r\n              <div className=\"w-5 h-5 bg-error rounded-full animate-bounce\" />\r\n              <div className=\"w-5 h-5 bg-primary rounded-full animate-bounce\" />\r\n              <div className=\"w-5 h-5 bg-blue-500 rounded-full animate-bounce\" />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"names":["children","onClick","className","isLoading","rest","child","defaultClassName","kind","href","to","onChange","type","placeholder","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","withErrorBoundary","props","useField","field","meta","touched","error","FallbackComponent","ErrorComponent","htmlFor","portalWrapperElm","element","document","createElement","id","createPortalWrapper","containerClassName","bodyClassName","containerStyle","bodyStyle","onClose","visible","useEffect","body","appendChild","renderContent","style","createPortal","fillRule","clipRule","open","width","height","useToggle","initialValue","useState","value","setValue","handleToggleValue","phoneRegExp","showPassword","handleTogglePassword","dispatch","useDispatch","add","useToast","search","setSearch","userAll","useSelector","state","userReducer","openModalDeleteUser","setOpenModalDeleteUser","openModalUpdateUser","setOpenModalUpdateUser","setIsLoading","userList","setUserList","getUserApi","current","setCurrent","listUser","setListUser","slice","data","map","name","userId","deleteUser","message","duration","position","avatar","email","phoneNumber","initialValues","passWord","confirmPassWord","validationSchema","Yup","shape","required","matches","min","oneOf","onSubmit","setSubmitting","setTimeout","updateUserApi","isSubmitting","errors","setFieldValue","e","currentTarget","filter","item","toLowerCase","includes","index","u","hideOnSinglePage","defaultCurrent","page","pageSize","total","length"],"sourceRoot":""}