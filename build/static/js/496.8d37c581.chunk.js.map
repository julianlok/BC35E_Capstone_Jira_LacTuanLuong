{"version":3,"file":"static/js/496.8d37c581.chunk.js","mappings":"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","sources":["components/Input/Input.tsx","components/Label/Label.tsx","components/common/ErrorComponent/ErrorComponent.tsx","components/common/FormGroup/FormGroup.tsx","components/icons/IconEyeToggle.tsx","hooks/useToggle.tsx","pages/Profile/Profile.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useField } from \"formik\";\r\nimport { withErrorBoundary } from \"react-error-boundary\";\r\nimport ErrorComponent from \"../common/ErrorComponent/ErrorComponent\";\r\nimport { propsInput } from \"../../types/global\";\r\n\r\nconst Input = ({\r\n  children,\r\n  className = \"bg-bgInput\",\r\n  ...props\r\n}: propsInput) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div className=\"relative \">\r\n      <input\r\n        className={`w-full px-6 py-4 border  rounded-xl text-sm font-medium placeholder:text-text4 dark:placeholder:text-text-2 ${className} ${\r\n          meta.touched && meta.error\r\n            ? \"border-error text-error\"\r\n            : \"border-strock text-text1 dark:border-darkStoke\"\r\n        } ${children ? \"pr-14\" : \"\"}`}\r\n        {...props}\r\n        {...field}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <span className=\"absolute bottom-0 left-1 translate-y-6 text-sm text-error font-medium pointer-events-none error-input\">\r\n          {meta.error}\r\n        </span>\r\n      ) : null}\r\n      {children && (\r\n        <span className=\" absolute right-6 top-2/4 -translate-y-2/4 cursor-pointer select-none\">\r\n          {children}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withErrorBoundary(Input, {\r\n  FallbackComponent: ErrorComponent,\r\n});\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  children: JSX.Element | React.ReactNode;\r\n  htmlFor?: string;\r\n  onClick?: any;\r\n};\r\n\r\nconst Label = (props: Props) => {\r\n  const { children, htmlFor = \"\", onClick } = props;\r\n  return (\r\n    <label\r\n      onClick={onClick}\r\n      htmlFor={htmlFor}\r\n      className=\"text-sm text-left font-medium  text-text2 dark:text-text3 cursor-pointer inline-block mt-5\"\r\n    >\r\n      {children}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\n\r\ntype Props = {};\r\n\r\nconst ErrorComponent = (props: Props) => {\r\n  return (\r\n    <div className=\"text-red-500 bg-red-100 p-5 rounded-lg\">\r\n      Look like component is error\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorComponent;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  children: JSX.Element | React.ReactNode;\r\n};\r\n\r\nconst FormGroup = ({ children }: Props) => {\r\n  return (\r\n    <div className=\"flex flex-col gap-y-2 lg:gap-y-3 mb-4 lg:mb-5\">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormGroup;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  open: boolean;\r\n  onClick: any;\r\n};\r\n\r\nconst IconEyeToggle = ({ open = false, onClick = () => void {} }: Props) => {\r\n  if (open)\r\n    return (\r\n      <span>\r\n        <svg\r\n          width={24}\r\n          height={24}\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          onClick={onClick}\r\n        >\r\n          <path\r\n            d=\"M3 12C3 12 6.27273 5 12 5C17.7273 5 21 12 21 12C21 12 17.7273 19 12 19C6.27273 19 3 12 3 12Z\"\r\n            stroke=\"#A2A2A8\"\r\n            strokeWidth={2}\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M12 14C13.1046 14 14 13.1046 14 12C14 10.8954 13.1046 10 12 10C10.8954 10 10 10.8954 10 12C10 13.1046 10.8954 14 12 14Z\"\r\n            stroke=\"#A2A2A8\"\r\n            strokeWidth={2}\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n        </svg>\r\n      </span>\r\n    );\r\n  return (\r\n    <span>\r\n      <svg\r\n        width={24}\r\n        height={24}\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        onClick={onClick}\r\n      >\r\n        <path\r\n          d=\"M13.7345 13.855C13.5098 14.1129 13.2388 14.3198 12.9378 14.4632C12.6367 14.6067 12.3116 14.6839 11.9821 14.6901C11.6525 14.6963 11.3251 14.6315 11.0195 14.4994C10.7139 14.3674 10.4362 14.1709 10.2031 13.9216C9.97007 13.6724 9.78632 13.3755 9.66287 13.0486C9.53942 12.7217 9.47879 12.3716 9.48461 12.0192C9.49042 11.6667 9.56256 11.3191 9.69672 10.9971C9.83087 10.6751 10.0243 10.3853 10.2655 10.145M16.86 17.1975C15.4614 18.3376 13.7584 18.9693 12 19C6.27273 19 3 12 3 12C4.01773 9.97167 5.42929 8.19955 7.14 6.80252L16.86 17.1975ZM10.2818 5.21002C10.845 5.06904 11.4216 4.99857 12 5.00002C17.7273 5.00002 21 12 21 12C20.5033 12.9937 19.911 13.9292 19.2327 14.7913L10.2818 5.21002Z\"\r\n          stroke=\"#A2A2A8\"\r\n          strokeWidth={2}\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M3 2.5L21 21\"\r\n          stroke=\"#A2A2A8\"\r\n          strokeWidth={2}\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n      </svg>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default IconEyeToggle;\r\n","import { useState } from \"react\";\r\n\r\nexport default function useToggle(initialValue = false) {\r\n  const [value, setValue] = useState(initialValue);\r\n  const handleToggleValue = () => {\r\n    setValue(!value);\r\n  };\r\n  return {\r\n    value,\r\n    handleToggleValue,\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport Label from \"../../components/Label/Label\";\r\nimport FormGroup from \"../../components/common/FormGroup/FormGroup\";\r\nimport { clearStore, getStoreJson, USER_LOGIN } from \"../../util/setting\";\r\nimport { UserLoginType, UserUpdateType } from \"../../types/global\";\r\nimport IconEyeToggle from \"../../components/icons/IconEyeToggle\";\r\nimport useToggle from \"../../hooks/useToggle\";\r\nimport { updateUserApi } from \"../../redux/userReducer/userReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { DispathType } from \"../../redux/config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useToast } from \"../../components/Toast\";\r\n\r\ntype Props = {};\r\n\r\nconst Profile = (props: Props) => {\r\n  const dispatch: DispathType = useDispatch();\r\n  const { add } = useToast();\r\n\r\n  const [update, setUpdate] = useState<boolean>(true);\r\n  const { avatar, email, id, name, phoneNumber }: UserLoginType =\r\n    getStoreJson(USER_LOGIN);\r\n  const initialValues: UserUpdateType = {\r\n    email,\r\n    id,\r\n    name,\r\n    phoneNumber,\r\n    passWord: \"\",\r\n    confirmPassWord: \"\",\r\n  };\r\n  const { value: showPassword, handleToggleValue: handleTogglePassword } =\r\n    useToggle();\r\n\r\n  const navigate = useNavigate();\r\n  function logOut() {\r\n    clearStore(USER_LOGIN);\r\n    navigate(\"/login\");\r\n    window.location.reload();\r\n  }\r\n  const phoneRegExp =\r\n    /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n  return (\r\n    <div className=\"bg-lite h-screen\">\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={Yup.object().shape({\r\n          name: Yup.string().required(\"name cannot be blank !\"),\r\n          email: Yup.string()\r\n            .required(\"email cannot be blank !\")\r\n            .email(\"email is invalid !\"),\r\n          phoneNumber: Yup.string()\r\n            .required(\"phone number cannot be blank !\")\r\n            .matches(phoneRegExp, \"Phone number is not valid\"),\r\n          passWord: Yup.string()\r\n            .required(\"pasword cannot be blank !\")\r\n            .min(8, \"Password must be 8 character \"),\r\n          confirmPassWord: Yup.string()\r\n            .required(\"password confirm cannot be blank !\")\r\n            .oneOf(\r\n              [Yup.ref(\"passWord\"), null],\r\n              \"Both password need to be the same\"\r\n            ),\r\n        })}\r\n        onSubmit={async (\r\n          { email, name, passWord, phoneNumber, id },\r\n          { setSubmitting }\r\n        ) => {\r\n          setSubmitting(true);\r\n\r\n          await dispatch(\r\n            updateUserApi({\r\n              id,\r\n              passWord,\r\n              email,\r\n              name,\r\n              phoneNumber,\r\n            })\r\n          );\r\n          await logOut();\r\n          await add({\r\n            type: \"success\",\r\n            message: \"Logout successful\",\r\n            duration: 5000,\r\n            position: \"topLeft\",\r\n          });\r\n        }}\r\n      >\r\n        {({ isSubmitting, resetForm }) => {\r\n          return (\r\n            <Form>\r\n              <div className=\"relative h-[150px] bg-gradient-to-r from-[#00a7b4] to-[#a4d96c] rounded-lg \">\r\n                <div className=\"absolute w-[80%] bottom-0 left-0 translate-y-[70%] translate-x-[20%]\">\r\n                  <div className=\"flex items-center justify-between \">\r\n                    <div className=\"flex items-center gap-x-5\">\r\n                      <div className=\"w-[150px] h-[150px] select-none cursor-pointer\">\r\n                        <img\r\n                          // src=\"https://api.dicebear.com/5.x/fun-emoji/svg?seed=Ginger\"\r\n                          src={avatar}\r\n                          alt=\"avatar\"\r\n                          className=\"rounded-full object-cover w-full h-full\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"flex flex-col items-start mt-5\">\r\n                        <span className=\"font-bold text-text5 text-2xl\">\r\n                          {name}\r\n                        </span>\r\n                        <p className=\"text-text2 font-thin\">\r\n                          ID: <span>{id}</span>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    {update ? (\r\n                      <div className=\"flex items-center justify-end\">\r\n                        <button\r\n                          className=\"text-lite text-base font-medium font-mono bg-blue-500 px-4 py-2 rounded-lg\"\r\n                          type=\"button\"\r\n                          onClick={() => {\r\n                            setUpdate(false);\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"flex items-center justify-end gap-x-3 w-2/6 mt-5 \">\r\n                        <button\r\n                          className=\"bg-stock border border-strock text-text3 text-base font-medium font-mono px-4 py-2  rounded-lg\"\r\n                          type=\"button\"\r\n                          onClick={() => {\r\n                            setUpdate(true);\r\n                            resetForm();\r\n                          }}\r\n                        >\r\n                          Cancel\r\n                        </button>\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"text-white text-base font-medium font-mono bg-blue-500 px-4 py-2 rounded-lg\"\r\n                        >\r\n                          Update\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"pt-36 flex flex-col items-center justify-center\">\r\n                <div className=\"w-2/5\">\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"name\">Full name</Label>\r\n                    <Input\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      type=\"text\"\r\n                      disabled={update}\r\n                      placeholder=\"Please enter your name\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"email\">Email</Label>\r\n                    <Input\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      type=\"text\"\r\n                      disabled={update}\r\n                      placeholder=\"Please enter your email\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"phoneNumber\">Phone number</Label>\r\n                    <Input\r\n                      id=\"phoneNumber\"\r\n                      name=\"phoneNumber\"\r\n                      type=\"text\"\r\n                      disabled={update}\r\n                      placeholder=\"Please enter your phone number\"\r\n                    />\r\n                  </FormGroup>\r\n                  {!update && (\r\n                    <>\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"passWord\">Password</Label>\r\n                        <Input\r\n                          id=\"passWord\"\r\n                          name=\"passWord\"\r\n                          type={showPassword ? \"text\" : \"password\"}\r\n                          disabled={update}\r\n                          placeholder=\"Please enter your password ...\"\r\n                        >\r\n                          <IconEyeToggle\r\n                            open={showPassword}\r\n                            onClick={handleTogglePassword}\r\n                          />\r\n                        </Input>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"confirmPassWord\">\r\n                          Password confirm\r\n                        </Label>\r\n                        <Input\r\n                          id=\"confirmPassWord\"\r\n                          name=\"confirmPassWord\"\r\n                          type={showPassword ? \"text\" : \"password\"}\r\n                          disabled={update}\r\n                          placeholder=\"Please confirm password ...\"\r\n                        />\r\n                      </FormGroup>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["withErrorBoundary","children","className","props","useField","field","meta","touched","error","FallbackComponent","ErrorComponent","htmlFor","onClick","open","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","useToggle","initialValue","useState","value","setValue","handleToggleValue","dispatch","useDispatch","add","useToast","update","setUpdate","getStoreJson","USER_LOGIN","avatar","email","id","name","phoneNumber","initialValues","passWord","confirmPassWord","showPassword","handleTogglePassword","navigate","useNavigate","validationSchema","Yup","shape","required","matches","min","oneOf","onSubmit","setSubmitting","updateUserApi","clearStore","window","location","reload","type","message","duration","position","isSubmitting","resetForm","src","alt","disabled","placeholder"],"sourceRoot":""}